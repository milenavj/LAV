
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %korekt = alloca i32                            ; <i32*> [#uses=3]
  %proizvod = alloca i32                          ; <i32*> [#uses=12]
  %d = alloca i32                                 ; <i32*> [#uses=4]
  %c = alloca i32                                 ; <i32*> [#uses=4]
  %b = alloca i32                                 ; <i32*> [#uses=4]
  %a = alloca i32                                 ; <i32*> [#uses=4]
  %x = alloca i32                                 ; <i32*> [#uses=9]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %korekt to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %proizvod to { }*             ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast i32* %d to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  %4 = bitcast i32* %c to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %5 = bitcast i32* %b to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  %6 = bitcast i32* %a to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %6, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable15 to { }*))
  %7 = bitcast i32* %x to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %7, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable17 to { }*))
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([42 x i8]* @.str18, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str19, i32 0, i32 0), i32* %x) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %proizvod, align 4
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %11 = srem i32 %10, 10                          ; <i32> [#uses=1]
  store i32 %11, i32* %a, align 4
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %13 = srem i32 %12, 100                         ; <i32> [#uses=1]
  %14 = sdiv i32 %13, 10                          ; <i32> [#uses=1]
  store i32 %14, i32* %b, align 4
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %16 = srem i32 %15, 1000                        ; <i32> [#uses=1]
  %17 = sdiv i32 %16, 100                         ; <i32> [#uses=1]
  store i32 %17, i32* %c, align 4
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %18 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %19 = sdiv i32 %18, 1000                        ; <i32> [#uses=1]
  store i32 %19, i32* %d, align 4
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %21 = icmp sle i32 %20, 0                       ; <i1> [#uses=1]
  br i1 %21, label %bb11, label %bb

2
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %23 = icmp sle i32 %22, 999                     ; <i1> [#uses=1]
  br i1 %23, label %bb11, label %bb1

3
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %24 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %25 = icmp sgt i32 %24, 9999                    ; <i1> [#uses=1]
  br i1 %25, label %bb11, label %bb2

4
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = load i32* %a, align 4                     ; <i32> [#uses=1]
  %27 = and i32 %26, 1                            ; <i32> [#uses=1]
  %28 = icmp eq i32 %27, 0                        ; <i1> [#uses=1]
  br i1 %28, label %bb3, label %bb4

5
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %29 = load i32* %proizvod, align 4              ; <i32> [#uses=1]
  %30 = load i32* %a, align 4                     ; <i32> [#uses=1]
  %31 = mul i32 %29, %30                          ; <i32> [#uses=1]
  store i32 %31, i32* %proizvod, align 4
  br label %bb4

6
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = load i32* %b, align 4                     ; <i32> [#uses=1]
  %33 = and i32 %32, 1                            ; <i32> [#uses=1]
  %34 = icmp eq i32 %33, 0                        ; <i1> [#uses=1]
  br i1 %34, label %bb5, label %bb6

7
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %35 = load i32* %proizvod, align 4              ; <i32> [#uses=1]
  %36 = load i32* %b, align 4                     ; <i32> [#uses=1]
  %37 = mul i32 %35, %36                          ; <i32> [#uses=1]
  store i32 %37, i32* %proizvod, align 4
  br label %bb6

8
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %38 = load i32* %c, align 4                     ; <i32> [#uses=1]
  %39 = and i32 %38, 1                            ; <i32> [#uses=1]
  %40 = icmp eq i32 %39, 0                        ; <i1> [#uses=1]
  br i1 %40, label %bb7, label %bb8

9
  call void @llvm.dbg.stoppoint(i32 31, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %41 = load i32* %proizvod, align 4              ; <i32> [#uses=1]
  %42 = load i32* %c, align 4                     ; <i32> [#uses=1]
  %43 = mul i32 %41, %42                          ; <i32> [#uses=1]
  store i32 %43, i32* %proizvod, align 4
  br label %bb8

10
  call void @llvm.dbg.stoppoint(i32 33, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %44 = load i32* %d, align 4                     ; <i32> [#uses=1]
  %45 = and i32 %44, 1                            ; <i32> [#uses=1]
  %46 = icmp eq i32 %45, 0                        ; <i1> [#uses=1]
  br i1 %46, label %bb9, label %bb10

11
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %47 = load i32* %proizvod, align 4              ; <i32> [#uses=1]
  %48 = load i32* %d, align 4                     ; <i32> [#uses=1]
  %49 = mul i32 %47, %48                          ; <i32> [#uses=1]
  store i32 %49, i32* %proizvod, align 4
  br label %bb10

12
  call void @llvm.dbg.stoppoint(i32 36, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %korekt, align 4
  br label %bb12

13
  call void @llvm.dbg.stoppoint(i32 41, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %50 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([5 x i8]* @.str20, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb12

14
  call void @llvm.dbg.stoppoint(i32 43, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %51 = load i32* %korekt, align 4                ; <i32> [#uses=1]
  %52 = icmp eq i32 %51, 1                        ; <i1> [#uses=1]
  br i1 %52, label %bb13, label %bb16

15
  call void @llvm.dbg.stoppoint(i32 45, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %53 = load i32* %proizvod, align 4              ; <i32> [#uses=1]
  %54 = icmp ne i32 %53, 1                        ; <i1> [#uses=1]
  br i1 %54, label %bb14, label %bb15

16
  call void @llvm.dbg.stoppoint(i32 47, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %55 = load i32* %proizvod, align 4              ; <i32> [#uses=1]
  %56 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([17 x i8]* @.str21, i32 0, i32 0), i32 %55) nounwind ; <i32> [#uses=0]
  br label %bb16

17
  call void @llvm.dbg.stoppoint(i32 49, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %57 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([5 x i8]* @.str22, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb16

18
  call void @llvm.dbg.stoppoint(i32 52, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %58 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %58, i32* %retval, align 4
  br label %return

19
  %retval17 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 52, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval17
