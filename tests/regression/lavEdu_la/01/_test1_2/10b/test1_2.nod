
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %p = alloca i32                                 ; <i32*> [#uses=6]
  %x = alloca i32                                 ; <i32*> [#uses=9]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %p to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %x to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  call void @llvm.dbg.stoppoint(i32 5, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %p, align 4
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %3 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([43 x i8]* @.str8, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %4 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str9, i32 0, i32 0), i32* %x) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = load i32* %x, align 4                      ; <i32> [#uses=1]
  %6 = icmp sle i32 %5, 999                       ; <i1> [#uses=1]
  br i1 %6, label %bb1, label %bb

2
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = load i32* %x, align 4                      ; <i32> [#uses=1]
  %8 = icmp sgt i32 %7, 9999                      ; <i1> [#uses=1]
  br i1 %8, label %bb1, label %bb2

3
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 -1, i32* %p, align 4
  br label %bb7

4
  br label %bb6

5
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load i32* %x, align 4                      ; <i32> [#uses=1]
  %10 = and i32 %9, 1                             ; <i32> [#uses=1]
  %11 = icmp eq i32 %10, 0                        ; <i1> [#uses=1]
  br i1 %11, label %bb4, label %bb5

6
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %13 = srem i32 %12, 10                          ; <i32> [#uses=1]
  %14 = load i32* %p, align 4                     ; <i32> [#uses=1]
  %15 = mul i32 %13, %14                          ; <i32> [#uses=1]
  store i32 %15, i32* %p, align 4
  br label %bb5

7
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %17 = sdiv i32 %16, 10                          ; <i32> [#uses=1]
  store i32 %17, i32* %x, align 4
  br label %bb6

8
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %18 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %19 = icmp sgt i32 %18, 0                       ; <i1> [#uses=1]
  br i1 %19, label %bb3, label %bb7

9
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load i32* %p, align 4                     ; <i32> [#uses=1]
  %21 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([17 x i8]* @.str10, i32 0, i32 0), i32 %20) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %22 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %22, i32* %retval, align 4
  br label %return

10
  %retval8 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval8
