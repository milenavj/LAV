
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %i = alloca i32                                 ; <i32*> [#uses=13]
  %m = alloca i32                                 ; <i32*> [#uses=11]
  %x = alloca i32                                 ; <i32*> [#uses=12]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %m to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast i32* %x to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  call void @llvm.dbg.stoppoint(i32 4, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %4 = call i32 @puts(i8* getelementptr ([39 x i8]* @.str10, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 5, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str11, i32 0, i32 0), i32* %x) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load i32* %x, align 4                      ; <i32> [#uses=1]
  %7 = icmp sle i32 %6, 999                       ; <i1> [#uses=1]
  br i1 %7, label %bb1, label %bb

2
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = load i32* %x, align 4                      ; <i32> [#uses=1]
  %9 = icmp sgt i32 %8, 9999                      ; <i1> [#uses=1]
  br i1 %9, label %bb1, label %bb2

3
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %i, align 4
  br label %bb10

4
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %m, align 4
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %11 = sdiv i32 %10, 1000                        ; <i32> [#uses=1]
  %12 = and i32 %11, 1                            ; <i32> [#uses=1]
  %13 = icmp eq i32 %12, 0                        ; <i1> [#uses=1]
  br i1 %13, label %bb3, label %bb4

5
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %15 = sdiv i32 %14, 1000                        ; <i32> [#uses=1]
  %16 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %17 = mul i32 %15, %16                          ; <i32> [#uses=1]
  store i32 %17, i32* %m, align 4
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %18 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %19 = add i32 %18, 1                            ; <i32> [#uses=1]
  store i32 %19, i32* %i, align 4
  br label %bb4

6
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %21 = sdiv i32 %20, 100                         ; <i32> [#uses=1]
  %22 = srem i32 %21, 10                          ; <i32> [#uses=1]
  %23 = and i32 %22, 1                            ; <i32> [#uses=1]
  %24 = icmp eq i32 %23, 0                        ; <i1> [#uses=1]
  br i1 %24, label %bb5, label %bb6

7
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %26 = sdiv i32 %25, 100                         ; <i32> [#uses=1]
  %27 = srem i32 %26, 10                          ; <i32> [#uses=1]
  %28 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %29 = mul i32 %27, %28                          ; <i32> [#uses=1]
  store i32 %29, i32* %m, align 4
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %30 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %31 = add i32 %30, 1                            ; <i32> [#uses=1]
  store i32 %31, i32* %i, align 4
  br label %bb6

8
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %33 = sdiv i32 %32, 10                          ; <i32> [#uses=1]
  %34 = srem i32 %33, 10                          ; <i32> [#uses=1]
  %35 = and i32 %34, 1                            ; <i32> [#uses=1]
  %36 = icmp eq i32 %35, 0                        ; <i1> [#uses=1]
  br i1 %36, label %bb7, label %bb8

9
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %37 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %38 = sdiv i32 %37, 10                          ; <i32> [#uses=1]
  %39 = srem i32 %38, 10                          ; <i32> [#uses=1]
  %40 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %41 = mul i32 %39, %40                          ; <i32> [#uses=1]
  store i32 %41, i32* %m, align 4
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %42 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %43 = add i32 %42, 1                            ; <i32> [#uses=1]
  store i32 %43, i32* %i, align 4
  br label %bb8

10
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %44 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %45 = srem i32 %44, 10                          ; <i32> [#uses=1]
  %46 = and i32 %45, 1                            ; <i32> [#uses=1]
  %47 = icmp eq i32 %46, 0                        ; <i1> [#uses=1]
  br i1 %47, label %bb9, label %bb10

11
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %48 = load i32* %x, align 4                     ; <i32> [#uses=1]
  %49 = srem i32 %48, 10                          ; <i32> [#uses=1]
  %50 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %51 = mul i32 %49, %50                          ; <i32> [#uses=1]
  store i32 %51, i32* %m, align 4
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %52 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %53 = add i32 %52, 1                            ; <i32> [#uses=1]
  store i32 %53, i32* %i, align 4
  br label %bb10

12
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %54 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %55 = icmp eq i32 %54, 0                        ; <i1> [#uses=1]
  br i1 %55, label %bb11, label %bb12

13
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %56 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str12, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb15

14
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %57 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %58 = icmp eq i32 %57, 1                        ; <i1> [#uses=1]
  br i1 %58, label %bb13, label %bb14

15
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %59 = call i32 @puts(i8* getelementptr ([3 x i8]* @.str13, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb15

16
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %60 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %61 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([30 x i8]* @.str14, i32 0, i32 0), i32 %60) nounwind ; <i32> [#uses=0]
  br label %bb15

17
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %62 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %62, i32* %retval, align 4
  br label %return

18
  %retval16 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval16
