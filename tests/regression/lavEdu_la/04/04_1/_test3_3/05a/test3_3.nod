
1
  %matrica_addr = alloca [10 x i32]*              ; <[10 x i32]**> [#uses=5]
  %niz_addr = alloca i32*                         ; <i32**> [#uses=5]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %m_addr = alloca i32                            ; <i32*> [#uses=3]
  %j = alloca i32                                 ; <i32*> [#uses=7]
  %i = alloca i32                                 ; <i32*> [#uses=11]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %0 = bitcast [10 x i32]** %matrica_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store [10 x i32]* %matrica, [10 x i32]** %matrica_addr
  %1 = bitcast i32** %niz_addr to { }*            ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable10 to { }*))
  store i32* %niz, i32** %niz_addr
  %2 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable12 to { }*))
  store i32 %n, i32* %n_addr
  %3 = bitcast i32* %m_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable14 to { }*))
  store i32 %m, i32* %m_addr
  %4 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable16 to { }*))
  %5 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable18 to { }*))
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb6

2
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load [10 x i32]** %matrica_addr, align 4   ; <[10 x i32]*> [#uses=1]
  %7 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %8 = getelementptr [10 x i32]* %6, i32 %7       ; <[10 x i32]*> [#uses=1]
  %9 = getelementptr [10 x i32]* %8, i32 0, i32 0 ; <i32*> [#uses=1]
  %10 = load i32* %9, align 4                     ; <i32> [#uses=1]
  %11 = load i32** %niz_addr, align 4             ; <i32*> [#uses=1]
  %12 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %13 = getelementptr i32* %11, i32 %12           ; <i32*> [#uses=1]
  store i32 %10, i32* %13, align 1
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb4

3
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load [10 x i32]** %matrica_addr, align 4  ; <[10 x i32]*> [#uses=1]
  %15 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %16 = getelementptr [10 x i32]* %14, i32 %15    ; <[10 x i32]*> [#uses=1]
  %17 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %18 = getelementptr [10 x i32]* %16, i32 0, i32 %17 ; <i32*> [#uses=1]
  %19 = load i32* %18, align 4                    ; <i32> [#uses=1]
  %20 = load i32** %niz_addr, align 4             ; <i32*> [#uses=1]
  %21 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %22 = getelementptr i32* %20, i32 %21           ; <i32*> [#uses=1]
  %23 = load i32* %22, align 1                    ; <i32> [#uses=1]
  %24 = icmp sgt i32 %19, %23                     ; <i1> [#uses=1]
  br i1 %24, label %bb2, label %bb3

4
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load [10 x i32]** %matrica_addr, align 4  ; <[10 x i32]*> [#uses=1]
  %26 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %27 = getelementptr [10 x i32]* %25, i32 %26    ; <[10 x i32]*> [#uses=1]
  %28 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %29 = getelementptr [10 x i32]* %27, i32 0, i32 %28 ; <i32*> [#uses=1]
  %30 = load i32* %29, align 4                    ; <i32> [#uses=1]
  %31 = load i32** %niz_addr, align 4             ; <i32*> [#uses=1]
  %32 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %33 = getelementptr i32* %31, i32 %32           ; <i32*> [#uses=1]
  store i32 %30, i32* %33, align 1
  br label %bb3

5
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %34 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %35 = add i32 %34, 1                            ; <i32> [#uses=1]
  store i32 %35, i32* %j, align 4
  br label %bb4

6
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %37 = load i32* %m_addr, align 4                ; <i32> [#uses=1]
  %38 = icmp slt i32 %36, %37                     ; <i1> [#uses=1]
  br i1 %38, label %bb1, label %bb5

7
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %39 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %40 = add i32 %39, 1                            ; <i32> [#uses=1]
  store i32 %40, i32* %i, align 4
  br label %bb6

8
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %41 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %42 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %43 = icmp slt i32 %41, %42                     ; <i1> [#uses=1]
  br i1 %43, label %bb, label %bb7

9
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  br label %return

10
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret void

11
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %j = alloca i32                                 ; <i32*> [#uses=6]
  %i = alloca i32                                 ; <i32*> [#uses=11]
  %niz = alloca [10 x i32]                        ; <[10 x i32]*> [#uses=3]
  %matrica = alloca [10 x [10 x i32]]             ; <[10 x [10 x i32]]*> [#uses=3]
  %m = alloca i32                                 ; <i32*> [#uses=6]
  %n = alloca i32                                 ; <i32*> [#uses=7]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram22 to { }*))
  %1 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable23 to { }*))
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable24 to { }*))
  %3 = bitcast [10 x i32]* %niz to { }*           ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable25 to { }*))
  %4 = bitcast [10 x [10 x i32]]* %matrica to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable28 to { }*))
  %5 = bitcast i32* %m to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable29 to { }*))
  %6 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %6, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable30 to { }*))
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = call i32 @puts(i8* getelementptr ([21 x i8]* @.str31, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str32, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = call i32 @puts(i8* getelementptr ([22 x i8]* @.str33, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str32, i32 0, i32 0), i32* %m) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %12 = icmp sle i32 %11, 0                       ; <i1> [#uses=1]
  br i1 %12, label %bb3, label %bb

12
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %14 = icmp sgt i32 %13, 9                       ; <i1> [#uses=1]
  br i1 %14, label %bb3, label %bb1

13
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %16 = icmp sgt i32 %15, 9                       ; <i1> [#uses=1]
  br i1 %16, label %bb3, label %bb2

14
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %18 = icmp sle i32 %17, 0                       ; <i1> [#uses=1]
  br i1 %18, label %bb3, label %bb4

15
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([3 x i8]* @.str34, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 -1, i32* %0, align 4
  br label %bb16

16
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = call i32 @puts(i8* getelementptr ([27 x i8]* @.str35, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb9

17
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb7

18
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %22 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %23 = getelementptr [10 x [10 x i32]]* %matrica, i32 0, i32 %21 ; <[10 x i32]*> [#uses=1]
  %24 = getelementptr [10 x i32]* %23, i32 0, i32 %22 ; <i32*> [#uses=1]
  %25 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str32, i32 0, i32 0), i32* %24) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %27 = add i32 %26, 1                            ; <i32> [#uses=1]
  store i32 %27, i32* %j, align 4
  br label %bb7

19
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %28 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %29 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %30 = icmp slt i32 %29, %28                     ; <i1> [#uses=1]
  br i1 %30, label %bb6, label %bb8

20
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %31 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %32 = add i32 %31, 1                            ; <i32> [#uses=1]
  store i32 %32, i32* %i, align 4
  br label %bb9

21
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %34 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %35 = icmp slt i32 %34, %33                     ; <i1> [#uses=1]
  br i1 %35, label %bb5, label %bb10

22
  call void @llvm.dbg.stoppoint(i32 31, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %37 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %matrica11 = bitcast [10 x [10 x i32]]* %matrica to [10 x i32]* ; <[10 x i32]*> [#uses=1]
  %niz12 = bitcast [10 x i32]* %niz to i32*       ; <i32*> [#uses=1]
  call void @maksimumi([10 x i32]* %matrica11, i32* %niz12, i32 %37, i32 %36) nounwind

23
  call void @maksimumi([10 x i32]* %matrica11, i32* %niz12, i32 %37, i32 %36) nounwind
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb14

24
  call void @llvm.dbg.stoppoint(i32 33, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %38 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %39 = getelementptr [10 x i32]* %niz, i32 0, i32 %38 ; <i32*> [#uses=1]
  %40 = load i32* %39, align 4                    ; <i32> [#uses=1]
  %41 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([4 x i8]* @.str36, i32 0, i32 0), i32 %40) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %42 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %43 = add i32 %42, 1                            ; <i32> [#uses=1]
  store i32 %43, i32* %i, align 4
  br label %bb14

25
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %44 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %45 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %46 = icmp slt i32 %45, %44                     ; <i1> [#uses=1]
  br i1 %46, label %bb13, label %bb15

26
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb16

27
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %47 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %47, i32* %retval, align 4
  br label %return

28
  %retval17 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram22 to { }*))
  ret i32 %retval17
