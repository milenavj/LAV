
1
  %niz_addr = alloca float*                       ; <float**> [#uses=3]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %i = alloca i32                                 ; <i32*> [#uses=6]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %0 = bitcast float** %niz_addr to { }*          ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store float* %niz, float** %niz_addr
  %1 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  store i32 %n, i32* %n_addr
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb1

2
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %3 = load float** %niz_addr, align 4            ; <float*> [#uses=1]
  %4 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %5 = getelementptr float* %3, i32 %4            ; <float*> [#uses=1]
  %6 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str12, i32 0, i32 0), float* %5) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %8 = add i32 %7, 1                              ; <i32> [#uses=1]
  store i32 %8, i32* %i, align 4
  br label %bb1

3
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %10 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %11 = icmp slt i32 %9, %10                      ; <i1> [#uses=1]
  br i1 %11, label %bb, label %bb2

4
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  br label %return

5
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret void

6
  %niz_addr = alloca float*                       ; <float**> [#uses=5]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %min = alloca float                             ; <float*> [#uses=4]
  %j = alloca i32                                 ; <i32*> [#uses=3]
  %i = alloca i32                                 ; <i32*> [#uses=8]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram16 to { }*))
  %1 = bitcast float** %niz_addr to { }*          ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable17 to { }*))
  store float* %niz, float** %niz_addr
  %2 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable18 to { }*))
  store i32 %n, i32* %n_addr
  %3 = bitcast float* %min to { }*                ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable20 to { }*))
  %4 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable22 to { }*))
  %5 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable23 to { }*))
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load float** %niz_addr, align 4            ; <float*> [#uses=1]
  %7 = getelementptr float* %6, i32 0             ; <float*> [#uses=1]
  %8 = load float* %7, align 1                    ; <float> [#uses=1]
  store float %8, float* %min, align 4
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb3

7
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load float** %niz_addr, align 4            ; <float*> [#uses=1]
  %10 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %11 = getelementptr float* %9, i32 %10          ; <float*> [#uses=1]
  %12 = load float* %11, align 1                  ; <float> [#uses=1]
  %13 = load float* %min, align 4                 ; <float> [#uses=1]
  %14 = fcmp ole float %12, %13                   ; <i1> [#uses=1]
  br i1 %14, label %bb1, label %bb2

8
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load float** %niz_addr, align 4           ; <float*> [#uses=1]
  %16 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %17 = getelementptr float* %15, i32 %16         ; <float*> [#uses=1]
  %18 = load float* %17, align 1                  ; <float> [#uses=1]
  store float %18, float* %min, align 4
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %i, align 4                     ; <i32> [#uses=1]
  store i32 %19, i32* %j, align 4
  br label %bb2

9
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %21 = add i32 %20, 1                            ; <i32> [#uses=1]
  store i32 %21, i32* %i, align 4
  br label %bb3

10
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %23 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %24 = icmp slt i32 %22, %23                     ; <i1> [#uses=1]
  br i1 %24, label %bb, label %bb4

11
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load i32* %j, align 4                     ; <i32> [#uses=1]
  store i32 %25, i32* %0, align 4
  %26 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %26, i32* %retval, align 4
  br label %return

12
  %retval5 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram16 to { }*))
  ret i32 %retval5

13
  %niz_addr = alloca float*                       ; <float**> [#uses=5]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %max = alloca float                             ; <float*> [#uses=4]
  %j = alloca i32                                 ; <i32*> [#uses=3]
  %i = alloca i32                                 ; <i32*> [#uses=8]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram25 to { }*))
  %1 = bitcast float** %niz_addr to { }*          ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable26 to { }*))
  store float* %niz, float** %niz_addr
  %2 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable27 to { }*))
  store i32 %n, i32* %n_addr
  %3 = bitcast float* %max to { }*                ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable29 to { }*))
  %4 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable30 to { }*))
  %5 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable31 to { }*))
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load float** %niz_addr, align 4            ; <float*> [#uses=1]
  %7 = getelementptr float* %6, i32 0             ; <float*> [#uses=1]
  %8 = load float* %7, align 1                    ; <float> [#uses=1]
  store float %8, float* %max, align 4
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb3

14
  call void @llvm.dbg.stoppoint(i32 36, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load float** %niz_addr, align 4            ; <float*> [#uses=1]
  %10 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %11 = getelementptr float* %9, i32 %10          ; <float*> [#uses=1]
  %12 = load float* %11, align 1                  ; <float> [#uses=1]
  %13 = load float* %max, align 4                 ; <float> [#uses=1]
  %14 = fcmp oge float %12, %13                   ; <i1> [#uses=1]
  br i1 %14, label %bb1, label %bb2

15
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load float** %niz_addr, align 4           ; <float*> [#uses=1]
  %16 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %17 = getelementptr float* %15, i32 %16         ; <float*> [#uses=1]
  %18 = load float* %17, align 1                  ; <float> [#uses=1]
  store float %18, float* %max, align 4
  call void @llvm.dbg.stoppoint(i32 38, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %i, align 4                     ; <i32> [#uses=1]
  store i32 %19, i32* %j, align 4
  br label %bb2

16
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %21 = add i32 %20, 1                            ; <i32> [#uses=1]
  store i32 %21, i32* %i, align 4
  br label %bb3

17
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %23 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %24 = icmp slt i32 %22, %23                     ; <i1> [#uses=1]
  br i1 %24, label %bb, label %bb4

18
  call void @llvm.dbg.stoppoint(i32 40, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load i32* %j, align 4                     ; <i32> [#uses=1]
  store i32 %25, i32* %0, align 4
  %26 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %26, i32* %retval, align 4
  br label %return

19
  %retval5 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 40, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram25 to { }*))
  ret i32 %retval5

20
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %max = alloca i32                               ; <i32*> [#uses=4]
  %min = alloca i32                               ; <i32*> [#uses=4]
  %n = alloca i32                                 ; <i32*> [#uses=7]
  %niz = alloca [100 x float]                     ; <[100 x float]*> [#uses=4]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram35 to { }*))
  %1 = bitcast i32* %max to { }*                  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable36 to { }*))
  %2 = bitcast i32* %min to { }*                  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable37 to { }*))
  %3 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable38 to { }*))
  %4 = bitcast [100 x float]* %niz to { }*        ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable41 to { }*))
  call void @llvm.dbg.stoppoint(i32 50, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([25 x i8]* @.str42, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 51, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str43, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 53, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %8 = icmp sle i32 %7, 0                         ; <i1> [#uses=1]
  br i1 %8, label %bb1, label %bb

21
  call void @llvm.dbg.stoppoint(i32 53, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %10 = icmp sgt i32 %9, 100                      ; <i1> [#uses=1]
  br i1 %10, label %bb1, label %bb2

22
  call void @llvm.dbg.stoppoint(i32 55, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = call i32 @puts(i8* getelementptr ([3 x i8]* @.str44, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 56, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb9

23
  call void @llvm.dbg.stoppoint(i32 58, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %niz3 = bitcast [100 x float]* %niz to float*   ; <float*> [#uses=1]
  call void @unesi(float* %niz3, i32 %12) nounwind

24
  call void @unesi(float* %niz3, i32 %12) nounwind
  call void @llvm.dbg.stoppoint(i32 62, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %niz4 = bitcast [100 x float]* %niz to float*   ; <float*> [#uses=1]
  %14 = call i32 @indeks_minimuma(float* %niz4, i32 %13) nounwind ; <i32> [#uses=1]

25
  %14 = call i32 @indeks_minimuma(float* %niz4, i32 %13) nounwind ; <i32> [#uses=1]
  store i32 %14, i32* %min, align 4
  call void @llvm.dbg.stoppoint(i32 63, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %niz5 = bitcast [100 x float]* %niz to float*   ; <float*> [#uses=1]
  %16 = call i32 @indeks_maksimuma(float* %niz5, i32 %15) nounwind ; <i32> [#uses=1]

26
  %16 = call i32 @indeks_maksimuma(float* %niz5, i32 %15) nounwind ; <i32> [#uses=1]
  store i32 %16, i32* %max, align 4
  call void @llvm.dbg.stoppoint(i32 65, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %min, align 4                   ; <i32> [#uses=1]
  %18 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([5 x i8]* @.str45, i32 0, i32 0), i32 %17) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 66, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %max, align 4                   ; <i32> [#uses=1]
  %20 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([4 x i8]* @.str46, i32 0, i32 0), i32 %19) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 68, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i32* %min, align 4                   ; <i32> [#uses=1]
  %22 = load i32* %max, align 4                   ; <i32> [#uses=1]
  %23 = icmp sgt i32 %21, %22                     ; <i1> [#uses=1]
  br i1 %23, label %bb6, label %bb7

27
  call void @llvm.dbg.stoppoint(i32 68, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %24 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str47, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb8

28
  call void @llvm.dbg.stoppoint(i32 69, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str48, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb8

29
  call void @llvm.dbg.stoppoint(i32 70, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb9

30
  call void @llvm.dbg.stoppoint(i32 70, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %26, i32* %retval, align 4
  br label %return

31
  %retval10 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 70, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram35 to { }*))
  ret i32 %retval10
