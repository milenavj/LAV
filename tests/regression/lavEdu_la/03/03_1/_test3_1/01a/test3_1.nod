
1
  %a_addr = alloca i8*                            ; <i8**> [#uses=11]
  %i = alloca i32                                 ; <i32*> [#uses=15]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %0 = bitcast i8** %a_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store i8* %a, i8** %a_addr
  %1 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb9

2
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %2 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %3 = and i32 %2, 1                              ; <i32> [#uses=1]
  %4 = icmp eq i32 %3, 0                          ; <i1> [#uses=1]
  br i1 %4, label %bb1, label %bb4

3
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = load i8** %a_addr, align 4                 ; <i8*> [#uses=1]
  %6 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %7 = getelementptr i8* %5, i32 %6               ; <i8*> [#uses=1]
  %8 = load i8* %7, align 1                       ; <i8> [#uses=1]
  %9 = icmp sle i8 %8, 122                        ; <i1> [#uses=1]
  br i1 %9, label %bb2, label %bb4

4
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i8** %a_addr, align 4                ; <i8*> [#uses=1]
  %11 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %12 = getelementptr i8* %10, i32 %11            ; <i8*> [#uses=1]
  %13 = load i8* %12, align 1                     ; <i8> [#uses=1]
  %14 = icmp sgt i8 %13, 96                       ; <i1> [#uses=1]
  br i1 %14, label %bb3, label %bb4

5
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load i8** %a_addr, align 4                ; <i8*> [#uses=1]
  %16 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %17 = getelementptr i8* %15, i32 %16            ; <i8*> [#uses=1]
  %18 = load i8* %17, align 1                     ; <i8> [#uses=1]
  %19 = sub i8 %18, 32                            ; <i8> [#uses=1]
  %20 = load i8** %a_addr, align 4                ; <i8*> [#uses=1]
  %21 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %22 = getelementptr i8* %20, i32 %21            ; <i8*> [#uses=1]
  store i8 %19, i8* %22, align 1
  br label %bb4

6
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %23 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %24 = and i32 %23, 1                            ; <i32> [#uses=1]
  %25 = trunc i32 %24 to i8                       ; <i8> [#uses=1]
  %toBool = icmp ne i8 %25, 0                     ; <i1> [#uses=1]
  br i1 %toBool, label %bb5, label %bb8

7
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = load i8** %a_addr, align 4                ; <i8*> [#uses=1]
  %27 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %28 = getelementptr i8* %26, i32 %27            ; <i8*> [#uses=1]
  %29 = load i8* %28, align 1                     ; <i8> [#uses=1]
  %30 = icmp sle i8 %29, 90                       ; <i1> [#uses=1]
  br i1 %30, label %bb6, label %bb8

8
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %31 = load i8** %a_addr, align 4                ; <i8*> [#uses=1]
  %32 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %33 = getelementptr i8* %31, i32 %32            ; <i8*> [#uses=1]
  %34 = load i8* %33, align 1                     ; <i8> [#uses=1]
  %35 = icmp sgt i8 %34, 64                       ; <i1> [#uses=1]
  br i1 %35, label %bb7, label %bb8

9
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i8** %a_addr, align 4                ; <i8*> [#uses=1]
  %37 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %38 = getelementptr i8* %36, i32 %37            ; <i8*> [#uses=1]
  %39 = load i8* %38, align 1                     ; <i8> [#uses=1]
  %40 = add i8 %39, 32                            ; <i8> [#uses=1]
  %41 = load i8** %a_addr, align 4                ; <i8*> [#uses=1]
  %42 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %43 = getelementptr i8* %41, i32 %42            ; <i8*> [#uses=1]
  store i8 %40, i8* %43, align 1
  br label %bb8

10
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %44 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %45 = add i32 %44, 1                            ; <i32> [#uses=1]
  store i32 %45, i32* %i, align 4
  br label %bb9

11
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %46 = load i8** %a_addr, align 4                ; <i8*> [#uses=1]
  %47 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %48 = getelementptr i8* %46, i32 %47            ; <i8*> [#uses=1]
  %49 = load i8* %48, align 1                     ; <i8> [#uses=1]
  %50 = icmp ne i8 %49, 0                         ; <i1> [#uses=1]
  br i1 %50, label %bb, label %bb10

12
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  br label %return

13
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret void

14
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %a = alloca [21 x i8]                           ; <[21 x i8]*> [#uses=4]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram13 to { }*))
  %1 = bitcast [21 x i8]* %a to { }*              ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable16 to { }*))
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %2 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([12 x i8]* @.str17, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %a1 = bitcast [21 x i8]* %a to i8*              ; <i8*> [#uses=1]
  %3 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str18, i32 0, i32 0), i8* %a1) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %a2 = bitcast [21 x i8]* %a to i8*              ; <i8*> [#uses=1]
  call void @izmeni(i8* %a2) nounwind

15
  call void @izmeni(i8* %a2) nounwind
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %a3 = bitcast [21 x i8]* %a to i8*              ; <i8*> [#uses=1]
  %4 = call i32 @puts(i8* %a3) nounwind           ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %5 = load i32* %0, align 4                      ; <i32> [#uses=1]
  store i32 %5, i32* %retval, align 4
  br label %return

16
  %retval4 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram13 to { }*))
  ret i32 %retval4
