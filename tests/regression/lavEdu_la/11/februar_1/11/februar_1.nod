
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %j = alloca i32                                 ; <i32*> [#uses=6]
  %i = alloca i32                                 ; <i32*> [#uses=6]
  %b = alloca float                               ; <float*> [#uses=3]
  %a = alloca [10 x [10 x float]]                 ; <[10 x [10 x float]]*> [#uses=6]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast float* %b to { }*                  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %4 = bitcast [10 x [10 x float]]* %a to { }*    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable15 to { }*))
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 @puts(i8* getelementptr ([16 x i8]* @.str16, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb4

2
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb2

3
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %7 = load i32* %j, align 4                      ; <i32> [#uses=1]
  %8 = getelementptr [10 x [10 x float]]* %a, i32 0, i32 %6 ; <[10 x float]*> [#uses=1]
  %9 = getelementptr [10 x float]* %8, i32 0, i32 %7 ; <float*> [#uses=1]
  %10 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str17, i32 0, i32 0), float* %9) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %12 = add i32 %11, 1                            ; <i32> [#uses=1]
  store i32 %12, i32* %j, align 4
  br label %bb2

4
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %14 = icmp sle i32 %13, 1                       ; <i1> [#uses=1]
  br i1 %14, label %bb1, label %bb3

5
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %16 = add i32 %15, 1                            ; <i32> [#uses=1]
  store i32 %16, i32* %i, align 4
  br label %bb4

6
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %18 = icmp sle i32 %17, 1                       ; <i1> [#uses=1]
  br i1 %18, label %bb, label %bb5

7
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = getelementptr [10 x [10 x float]]* %a, i32 0, i32 0 ; <[10 x float]*> [#uses=1]
  %20 = getelementptr [10 x float]* %19, i32 0, i32 0 ; <float*> [#uses=1]
  %21 = load float* %20, align 4                  ; <float> [#uses=1]
  %22 = getelementptr [10 x [10 x float]]* %a, i32 0, i32 1 ; <[10 x float]*> [#uses=1]
  %23 = getelementptr [10 x float]* %22, i32 0, i32 1 ; <float*> [#uses=1]
  %24 = load float* %23, align 4                  ; <float> [#uses=1]
  %25 = fmul float %21, %24                       ; <float> [#uses=1]
  %26 = getelementptr [10 x [10 x float]]* %a, i32 0, i32 0 ; <[10 x float]*> [#uses=1]
  %27 = getelementptr [10 x float]* %26, i32 0, i32 1 ; <float*> [#uses=1]
  %28 = load float* %27, align 4                  ; <float> [#uses=1]
  %29 = getelementptr [10 x [10 x float]]* %a, i32 0, i32 1 ; <[10 x float]*> [#uses=1]
  %30 = getelementptr [10 x float]* %29, i32 0, i32 0 ; <float*> [#uses=1]
  %31 = load float* %30, align 4                  ; <float> [#uses=1]
  %32 = fmul float %28, %31                       ; <float> [#uses=1]
  %33 = fsub float %25, %32                       ; <float> [#uses=1]
  store float %33, float* %b, align 4
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %34 = load float* %b, align 4                   ; <float> [#uses=1]
  %35 = fpext float %34 to double                 ; <double> [#uses=1]
  %36 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([5 x i8]* @.str18, i32 0, i32 0), double %35) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %37 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %37, i32* %retval, align 4
  br label %return

8
  %retval6 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval6
