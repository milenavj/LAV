
1
  %a_addr = alloca %llvm.dbg.anchor.type          ; <%llvm.dbg.anchor.type*> [#uses=5]
  %b_addr = alloca %llvm.dbg.anchor.type          ; <%llvm.dbg.anchor.type*> [#uses=5]
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast %llvm.dbg.anchor.type* %a_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = getelementptr %llvm.dbg.anchor.type* %a_addr, i32 0, i32 0 ; <i32*> [#uses=1]
  store i32 %a.0, i32* %2
  %3 = getelementptr %llvm.dbg.anchor.type* %a_addr, i32 0, i32 1 ; <i32*> [#uses=1]
  store i32 %a.1, i32* %3
  %4 = bitcast %llvm.dbg.anchor.type* %b_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable15 to { }*))
  %5 = getelementptr %llvm.dbg.anchor.type* %b_addr, i32 0, i32 0 ; <i32*> [#uses=1]
  store i32 %b.0, i32* %5
  %6 = getelementptr %llvm.dbg.anchor.type* %b_addr, i32 0, i32 1 ; <i32*> [#uses=1]
  store i32 %b.1, i32* %6
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = getelementptr %llvm.dbg.anchor.type* %a_addr, i32 0, i32 0 ; <i32*> [#uses=1]
  %8 = load i32* %7, align 4                      ; <i32> [#uses=1]
  %9 = uitofp i32 %8 to double                    ; <double> [#uses=1]
  %10 = getelementptr %llvm.dbg.anchor.type* %a_addr, i32 0, i32 1 ; <i32*> [#uses=1]
  %11 = load i32* %10, align 4                    ; <i32> [#uses=1]
  %12 = uitofp i32 %11 to double                  ; <double> [#uses=1]
  %13 = fdiv double %9, %12                       ; <double> [#uses=1]
  %14 = getelementptr %llvm.dbg.anchor.type* %b_addr, i32 0, i32 0 ; <i32*> [#uses=1]
  %15 = load i32* %14, align 4                    ; <i32> [#uses=1]
  %16 = uitofp i32 %15 to double                  ; <double> [#uses=1]
  %17 = getelementptr %llvm.dbg.anchor.type* %b_addr, i32 0, i32 1 ; <i32*> [#uses=1]
  %18 = load i32* %17, align 4                    ; <i32> [#uses=1]
  %19 = uitofp i32 %18 to double                  ; <double> [#uses=1]
  %20 = fdiv double %16, %19                      ; <double> [#uses=1]
  %21 = fcmp ole double %13, %20                  ; <i1> [#uses=1]
  br i1 %21, label %bb, label %bb1

2
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %0, align 4
  br label %bb2

3
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb2

4
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %22, i32* %retval, align 4
  br label %return

5
  %retval3 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval3

6
  %razlomci_addr = alloca %llvm.dbg.anchor.type*  ; <%llvm.dbg.anchor.type**> [#uses=4]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %i = alloca i32                                 ; <i32*> [#uses=7]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram20 to { }*))
  %0 = bitcast %llvm.dbg.anchor.type** %razlomci_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable22 to { }*))
  store %llvm.dbg.anchor.type* %razlomci, %llvm.dbg.anchor.type** %razlomci_addr
  %1 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable24 to { }*))
  store i32 %n, i32* %n_addr
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable26 to { }*))
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb1

7
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %3 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %4 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %5 = getelementptr %llvm.dbg.anchor.type* %3, i32 %4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %6 = getelementptr %llvm.dbg.anchor.type* %5, i32 0, i32 1 ; <i32*> [#uses=1]
  %7 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %8 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %9 = getelementptr %llvm.dbg.anchor.type* %7, i32 %8 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %10 = getelementptr %llvm.dbg.anchor.type* %9, i32 0, i32 0 ; <i32*> [#uses=1]
  %11 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([5 x i8]* @.str27, i32 0, i32 0), i32* %10, i32* %6) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %13 = add i32 %12, 1                            ; <i32> [#uses=1]
  store i32 %13, i32* %i, align 4
  br label %bb1

8
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %16 = icmp ult i32 %14, %15                     ; <i1> [#uses=1]
  br i1 %16, label %bb, label %bb2

9
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  br label %return

10
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram20 to { }*))
  ret void

11
  %razlomci_addr = alloca %llvm.dbg.anchor.type*  ; <%llvm.dbg.anchor.type**> [#uses=4]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %i = alloca i32                                 ; <i32*> [#uses=7]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram29 to { }*))
  %0 = bitcast %llvm.dbg.anchor.type** %razlomci_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable30 to { }*))
  store %llvm.dbg.anchor.type* %razlomci, %llvm.dbg.anchor.type** %razlomci_addr
  %1 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable31 to { }*))
  store i32 %n, i32* %n_addr
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable32 to { }*))
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb1

12
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %3 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %4 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %5 = getelementptr %llvm.dbg.anchor.type* %3, i32 %4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %6 = getelementptr %llvm.dbg.anchor.type* %5, i32 0, i32 1 ; <i32*> [#uses=1]
  %7 = load i32* %6, align 4                      ; <i32> [#uses=1]
  %8 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %9 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %10 = getelementptr %llvm.dbg.anchor.type* %8, i32 %9 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %11 = getelementptr %llvm.dbg.anchor.type* %10, i32 0, i32 0 ; <i32*> [#uses=1]
  %12 = load i32* %11, align 4                    ; <i32> [#uses=1]
  %13 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([7 x i8]* @.str33, i32 0, i32 0), i32 %12, i32 %7) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = add i32 %14, 1                            ; <i32> [#uses=1]
  store i32 %15, i32* %i, align 4
  br label %bb1

13
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %17 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %18 = icmp ult i32 %16, %17                     ; <i1> [#uses=1]
  br i1 %18, label %bb, label %bb2

14
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  br label %return

15
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram29 to { }*))
  ret void

16
  %razlomci_addr = alloca %llvm.dbg.anchor.type*  ; <%llvm.dbg.anchor.type**> [#uses=10]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %max = alloca double, align 8                   ; <double*> [#uses=4]
  %j = alloca i32                                 ; <i32*> [#uses=5]
  %i = alloca i32                                 ; <i32*> [#uses=10]
  %a = alloca %llvm.dbg.anchor.type               ; <%llvm.dbg.anchor.type*> [#uses=5]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram37 to { }*))
  %0 = bitcast %llvm.dbg.anchor.type** %razlomci_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable38 to { }*))
  store %llvm.dbg.anchor.type* %razlomci, %llvm.dbg.anchor.type** %razlomci_addr
  %1 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable39 to { }*))
  store i32 %n, i32* %n_addr
  %2 = bitcast double* %max to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable43 to { }*))
  %3 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable45 to { }*))
  %4 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable46 to { }*))
  %5 = bitcast %llvm.dbg.anchor.type* %a to { }*  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable47 to { }*))
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  call void @llvm.dbg.stoppoint(i32 33, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %7 = getelementptr %llvm.dbg.anchor.type* %6, i32 0 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %8 = getelementptr %llvm.dbg.anchor.type* %7, i32 0, i32 0 ; <i32*> [#uses=1]
  %9 = load i32* %8, align 4                      ; <i32> [#uses=1]
  %10 = uitofp i32 %9 to double                   ; <double> [#uses=1]
  %11 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %12 = getelementptr %llvm.dbg.anchor.type* %11, i32 0 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %13 = getelementptr %llvm.dbg.anchor.type* %12, i32 0, i32 1 ; <i32*> [#uses=1]
  %14 = load i32* %13, align 4                    ; <i32> [#uses=1]
  %15 = uitofp i32 %14 to double                  ; <double> [#uses=1]
  %16 = fdiv double %10, %15                      ; <double> [#uses=1]
  store double %16, double* %max, align 8
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb3

17
  call void @llvm.dbg.stoppoint(i32 36, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %18 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %19 = getelementptr %llvm.dbg.anchor.type* %17, i32 %18 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %20 = getelementptr %llvm.dbg.anchor.type* %19, i32 0, i32 0 ; <i32*> [#uses=1]
  %21 = load i32* %20, align 4                    ; <i32> [#uses=1]
  %22 = uitofp i32 %21 to double                  ; <double> [#uses=1]
  %23 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %24 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %25 = getelementptr %llvm.dbg.anchor.type* %23, i32 %24 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %26 = getelementptr %llvm.dbg.anchor.type* %25, i32 0, i32 1 ; <i32*> [#uses=1]
  %27 = load i32* %26, align 4                    ; <i32> [#uses=1]
  %28 = uitofp i32 %27 to double                  ; <double> [#uses=1]
  %29 = fdiv double %22, %28                      ; <double> [#uses=1]
  %30 = load double* %max, align 8                ; <double> [#uses=1]
  %31 = fcmp ogt double %29, %30                  ; <i1> [#uses=1]
  br i1 %31, label %bb1, label %bb2

18
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %33 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %34 = getelementptr %llvm.dbg.anchor.type* %32, i32 %33 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %35 = getelementptr %llvm.dbg.anchor.type* %34, i32 0, i32 0 ; <i32*> [#uses=1]
  %36 = load i32* %35, align 4                    ; <i32> [#uses=1]
  %37 = uitofp i32 %36 to double                  ; <double> [#uses=1]
  %38 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %39 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %40 = getelementptr %llvm.dbg.anchor.type* %38, i32 %39 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %41 = getelementptr %llvm.dbg.anchor.type* %40, i32 0, i32 1 ; <i32*> [#uses=1]
  %42 = load i32* %41, align 4                    ; <i32> [#uses=1]
  %43 = uitofp i32 %42 to double                  ; <double> [#uses=1]
  %44 = fdiv double %37, %43                      ; <double> [#uses=1]
  store double %44, double* %max, align 8
  call void @llvm.dbg.stoppoint(i32 38, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %45 = load i32* %i, align 4                     ; <i32> [#uses=1]
  store i32 %45, i32* %j, align 4
  br label %bb2

19
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %46 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %47 = add i32 %46, 1                            ; <i32> [#uses=1]
  store i32 %47, i32* %i, align 4
  br label %bb3

20
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %48 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %49 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %50 = icmp ult i32 %48, %49                     ; <i1> [#uses=1]
  br i1 %50, label %bb, label %bb4

21
  call void @llvm.dbg.stoppoint(i32 40, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %51 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %52 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %53 = getelementptr %llvm.dbg.anchor.type* %51, i32 %52 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %54 = getelementptr %llvm.dbg.anchor.type* %53, i32 0, i32 0 ; <i32*> [#uses=1]
  %55 = load i32* %54, align 4                    ; <i32> [#uses=1]
  %56 = getelementptr %llvm.dbg.anchor.type* %a, i32 0, i32 0 ; <i32*> [#uses=1]
  store i32 %55, i32* %56, align 4
  call void @llvm.dbg.stoppoint(i32 41, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %57 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %58 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %59 = getelementptr %llvm.dbg.anchor.type* %57, i32 %58 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %60 = getelementptr %llvm.dbg.anchor.type* %59, i32 0, i32 1 ; <i32*> [#uses=1]
  %61 = load i32* %60, align 4                    ; <i32> [#uses=1]
  %62 = getelementptr %llvm.dbg.anchor.type* %a, i32 0, i32 1 ; <i32*> [#uses=1]
  store i32 %61, i32* %62, align 4
  call void @llvm.dbg.stoppoint(i32 45, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %63 = getelementptr %llvm.dbg.anchor.type* %agg.result, i32 0, i32 0 ; <i32*> [#uses=1]
  %64 = getelementptr %llvm.dbg.anchor.type* %a, i32 0, i32 0 ; <i32*> [#uses=1]
  %65 = load i32* %64, align 4                    ; <i32> [#uses=1]
  store i32 %65, i32* %63, align 4
  %66 = getelementptr %llvm.dbg.anchor.type* %agg.result, i32 0, i32 1 ; <i32*> [#uses=1]
  %67 = getelementptr %llvm.dbg.anchor.type* %a, i32 0, i32 1 ; <i32*> [#uses=1]
  %68 = load i32* %67, align 4                    ; <i32> [#uses=1]
  store i32 %68, i32* %66, align 4
  br label %return

22
  call void @llvm.dbg.stoppoint(i32 45, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram37 to { }*))
  ret void

23
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %N = alloca i32                                 ; <i32*> [#uses=6]
  %c = alloca %llvm.dbg.anchor.type               ; <%llvm.dbg.anchor.type*> [#uses=4]
  %razlomci = alloca %llvm.dbg.anchor.type*       ; <%llvm.dbg.anchor.type**> [#uses=8]
  %b = alloca %llvm.dbg.anchor.type               ; <%llvm.dbg.anchor.type*> [#uses=5]
  %a = alloca %llvm.dbg.anchor.type               ; <%llvm.dbg.anchor.type*> [#uses=5]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram53 to { }*))
  %1 = bitcast i32* %N to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable55 to { }*))
  %2 = bitcast %llvm.dbg.anchor.type* %c to { }*  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable57 to { }*))
  %3 = bitcast %llvm.dbg.anchor.type** %razlomci to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable58 to { }*))
  %4 = bitcast %llvm.dbg.anchor.type* %b to { }*  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable59 to { }*))
  %5 = bitcast %llvm.dbg.anchor.type* %a to { }*  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable60 to { }*))
  call void @llvm.dbg.stoppoint(i32 55, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = getelementptr %llvm.dbg.anchor.type* %a, i32 0, i32 0 ; <i32*> [#uses=1]
  %7 = getelementptr %llvm.dbg.anchor.type* %a, i32 0, i32 1 ; <i32*> [#uses=1]
  %8 = getelementptr %llvm.dbg.anchor.type* %b, i32 0, i32 0 ; <i32*> [#uses=1]
  %9 = getelementptr %llvm.dbg.anchor.type* %b, i32 0, i32 1 ; <i32*> [#uses=1]
  %10 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([9 x i8]* @.str61, i32 0, i32 0), i32* %6, i32* %7, i32* %8, i32* %9) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 57, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %elt = getelementptr %llvm.dbg.anchor.type* %a, i32 0, i32 0 ; <i32*> [#uses=1]
  %val = load i32* %elt                           ; <i32> [#uses=1]
  %elt1 = getelementptr %llvm.dbg.anchor.type* %a, i32 0, i32 1 ; <i32*> [#uses=1]
  %val2 = load i32* %elt1                         ; <i32> [#uses=1]
  %elt3 = getelementptr %llvm.dbg.anchor.type* %b, i32 0, i32 0 ; <i32*> [#uses=1]
  %val4 = load i32* %elt3                         ; <i32> [#uses=1]
  %elt5 = getelementptr %llvm.dbg.anchor.type* %b, i32 0, i32 1 ; <i32*> [#uses=1]
  %val6 = load i32* %elt5                         ; <i32> [#uses=1]
  %11 = call i32 @manji_ili_jednak(i32 %val, i32 %val2, i32 %val4, i32 %val6) nounwind ; <i32> [#uses=1]

24
  %11 = call i32 @manji_ili_jednak(i32 %val, i32 %val2, i32 %val4, i32 %val6) nounwind ; <i32> [#uses=1]
  %12 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([9 x i8]* @.str62, i32 0, i32 0), i32 %11) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 59, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str63, i32 0, i32 0), i32* %N) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 61, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %N, align 4                     ; <i32> [#uses=1]
  %15 = mul i32 %14, 8                            ; <i32> [#uses=1]
  %16 = call i8* @malloc(i32 %15) nounwind        ; <i8*> [#uses=1]
  %17 = bitcast i8* %16 to %llvm.dbg.anchor.type* ; <%llvm.dbg.anchor.type*> [#uses=1]
  store %llvm.dbg.anchor.type* %17, %llvm.dbg.anchor.type** %razlomci, align 4
  call void @llvm.dbg.stoppoint(i32 62, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %18 = load %llvm.dbg.anchor.type** %razlomci, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %19 = icmp eq %llvm.dbg.anchor.type* %18, null  ; <i1> [#uses=1]
  br i1 %19, label %bb, label %bb7

25
  call void @llvm.dbg.stoppoint(i32 63, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([8 x i8]* @.str64, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 64, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb8

26
  call void @llvm.dbg.stoppoint(i32 68, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i32* %N, align 4                     ; <i32> [#uses=1]
  %22 = load %llvm.dbg.anchor.type** %razlomci, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  call void @ucitaj_razlomke(%llvm.dbg.anchor.type* %22, i32 %21) nounwind

27
  call void @ucitaj_razlomke(%llvm.dbg.anchor.type* %22, i32 %21) nounwind
  call void @llvm.dbg.stoppoint(i32 70, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %23 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([6 x i8]* @.str65, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 71, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %24 = load i32* %N, align 4                     ; <i32> [#uses=1]
  %25 = load %llvm.dbg.anchor.type** %razlomci, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  call void @ispisi_razlomke(%llvm.dbg.anchor.type* %25, i32 %24) nounwind

28
  call void @ispisi_razlomke(%llvm.dbg.anchor.type* %25, i32 %24) nounwind
  call void @llvm.dbg.stoppoint(i32 72, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 74, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %27 = load i32* %N, align 4                     ; <i32> [#uses=1]
  %28 = load %llvm.dbg.anchor.type** %razlomci, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  call void @maksimum(%llvm.dbg.anchor.type* noalias sret %c, %llvm.dbg.anchor.type* %28, i32 %27) nounwind

29
  call void @maksimum(%llvm.dbg.anchor.type* noalias sret %c, %llvm.dbg.anchor.type* %28, i32 %27) nounwind
  call void @llvm.dbg.stoppoint(i32 75, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %29 = getelementptr %llvm.dbg.anchor.type* %c, i32 0, i32 1 ; <i32*> [#uses=1]
  %30 = load i32* %29, align 4                    ; <i32> [#uses=1]
  %31 = getelementptr %llvm.dbg.anchor.type* %c, i32 0, i32 0 ; <i32*> [#uses=1]
  %32 = load i32* %31, align 4                    ; <i32> [#uses=1]
  %33 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([12 x i8]* @.str66, i32 0, i32 0), i32 %32, i32 %30) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 77, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %34 = load %llvm.dbg.anchor.type** %razlomci, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %35 = bitcast %llvm.dbg.anchor.type* %34 to i8* ; <i8*> [#uses=1]
  call void @free(i8* %35) nounwind
  call void @llvm.dbg.stoppoint(i32 78, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store %llvm.dbg.anchor.type* null, %llvm.dbg.anchor.type** %razlomci, align 4
  call void @llvm.dbg.stoppoint(i32 80, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb8

30
  call void @llvm.dbg.stoppoint(i32 80, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %36, i32* %retval, align 4
  br label %return

31
  %retval9 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 80, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram53 to { }*))
  ret i32 %retval9
