
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %j = alloca i32                                 ; <i32*> [#uses=9]
  %i = alloca i32                                 ; <i32*> [#uses=10]
  %n = alloca i32                                 ; <i32*> [#uses=8]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %4 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str10, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %6 = and i32 %5, 1                              ; <i32> [#uses=1]
  %7 = icmp eq i32 %6, 0                          ; <i1> [#uses=1]
  br i1 %7, label %bb, label %bb1

2
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str11, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 -1, i32* %0, align 4
  br label %bb18

3
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb16

4
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb14

5
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %10 = sdiv i32 %9, 2                            ; <i32> [#uses=1]
  %11 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %12 = icmp sge i32 %10, %11                     ; <i1> [#uses=1]
  br i1 %12, label %bb4, label %bb9

6
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = icmp slt i32 %13, %14                     ; <i1> [#uses=1]
  br i1 %15, label %bb6, label %bb5

7
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %17 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %18 = sub i32 %16, %17                          ; <i32> [#uses=1]
  %19 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %20 = icmp sle i32 %18, %19                     ; <i1> [#uses=1]
  br i1 %20, label %bb6, label %bb7

8
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  br label %bb8

9
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  br label %bb8

10
  br label %bb13

11
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %23 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %24 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %25 = icmp sgt i32 %23, %24                     ; <i1> [#uses=1]
  br i1 %25, label %bb11, label %bb10

12
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %27 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %28 = sub i32 %26, %27                          ; <i32> [#uses=1]
  %29 = sub i32 %28, 1                            ; <i32> [#uses=1]
  %30 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %31 = icmp sgt i32 %29, %30                     ; <i1> [#uses=1]
  br i1 %31, label %bb11, label %bb12

13
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  br label %bb13

14
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  br label %bb13

15
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %34 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %35 = add i32 %34, 1                            ; <i32> [#uses=1]
  store i32 %35, i32* %j, align 4
  br label %bb14

16
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %37 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %38 = icmp slt i32 %37, %36                     ; <i1> [#uses=1]
  br i1 %38, label %bb3, label %bb15

17
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %39 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %40 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %41 = add i32 %40, 1                            ; <i32> [#uses=1]
  store i32 %41, i32* %i, align 4
  br label %bb16

18
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %42 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %43 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %44 = icmp slt i32 %43, %42                     ; <i1> [#uses=1]
  br i1 %44, label %bb2, label %bb17

19
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb18

20
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %45 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %45, i32* %retval, align 4
  br label %return

21
  %retval19 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval19
