
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %l = alloca i32                                 ; <i32*> [#uses=4]
  %k = alloca i32                                 ; <i32*> [#uses=8]
  %j = alloca i32                                 ; <i32*> [#uses=7]
  %i = alloca i32                                 ; <i32*> [#uses=5]
  %n = alloca i32                                 ; <i32*> [#uses=7]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %l to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %k to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  %4 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %5 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %k, align 4
  store i32 1, i32* %l, align 4
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str14, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %8 = srem i32 %7, 2                             ; <i32> [#uses=1]
  %9 = icmp eq i32 %8, 1                          ; <i1> [#uses=1]
  br i1 %9, label %bb, label %bb14

2
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb12

3
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb7

4
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %11 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %12 = icmp slt i32 %10, %11                     ; <i1> [#uses=1]
  br i1 %12, label %bb4, label %bb3

5
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %14 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %15 = sub i32 %13, %14                          ; <i32> [#uses=1]
  %16 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %17 = icmp sle i32 %15, %16                     ; <i1> [#uses=1]
  br i1 %17, label %bb4, label %bb5

6
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %18 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  br label %bb6

7
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  br label %bb6

8
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %21 = add i32 %20, 1                            ; <i32> [#uses=1]
  store i32 %21, i32* %j, align 4
  br label %bb7

9
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %23 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %24 = icmp slt i32 %23, %22                     ; <i1> [#uses=1]
  br i1 %24, label %bb2, label %bb8

10
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %26 = icmp ne i32 %25, 0                        ; <i1> [#uses=1]
  br i1 %26, label %bb9, label %bb11

11
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %27 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %28 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %29 = add i32 %28, 1                            ; <i32> [#uses=1]
  %30 = sdiv i32 %27, %29                         ; <i32> [#uses=1]
  %31 = icmp eq i32 %30, 1                        ; <i1> [#uses=1]
  br i1 %31, label %bb10, label %bb11

12
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 -1, i32* %l, align 4
  br label %bb11

13
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %33 = load i32* %l, align 4                     ; <i32> [#uses=1]
  %34 = add i32 %32, %33                          ; <i32> [#uses=1]
  store i32 %34, i32* %k, align 4
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %35 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %37 = add i32 %36, 1                            ; <i32> [#uses=1]
  store i32 %37, i32* %i, align 4
  br label %bb12

14
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %38 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %39 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %40 = icmp slt i32 %39, %38                     ; <i1> [#uses=1]
  br i1 %40, label %bb1, label %bb13

15
  br label %bb15

16
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %41 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str15, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb15

17
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %42 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %42, i32* %retval, align 4
  br label %return

18
  %retval16 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval16
