
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %k = alloca i32                                 ; <i32*> [#uses=9]
  %g = alloca i32                                 ; <i32*> [#uses=14]
  %i = alloca i32                                 ; <i32*> [#uses=25]
  %n = alloca i32                                 ; <i32*> [#uses=7]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %k to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %g to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  %4 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %g, align 4
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str12, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %7 = and i32 %6, 1                              ; <i32> [#uses=1]
  %8 = icmp eq i32 %7, 0                          ; <i1> [#uses=1]
  br i1 %8, label %bb, label %bb1

2
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str13, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb25

3
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %k, align 4
  br label %bb12

4
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb4

5
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %12 = add i32 %11, 1                            ; <i32> [#uses=1]
  store i32 %12, i32* %i, align 4
  br label %bb4

6
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %14 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %15 = icmp slt i32 %13, %14                     ; <i1> [#uses=1]
  br i1 %15, label %bb3, label %bb5

7
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb7

8
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %18 = add i32 %17, 1                            ; <i32> [#uses=1]
  store i32 %18, i32* %i, align 4
  br label %bb7

9
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %20 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %21 = mul i32 %20, 2                            ; <i32> [#uses=1]
  %22 = sub i32 %19, %21                          ; <i32> [#uses=1]
  %23 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %24 = icmp sgt i32 %22, %23                     ; <i1> [#uses=1]
  br i1 %24, label %bb6, label %bb8

10
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb10

11
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %27 = add i32 %26, 1                            ; <i32> [#uses=1]
  store i32 %27, i32* %i, align 4
  br label %bb10

12
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %28 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %29 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %30 = icmp slt i32 %28, %29                     ; <i1> [#uses=1]
  br i1 %30, label %bb9, label %bb11

13
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %31 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %33 = add i32 %32, 1                            ; <i32> [#uses=1]
  store i32 %33, i32* %g, align 4
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %34 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %35 = add i32 %34, 1                            ; <i32> [#uses=1]
  store i32 %35, i32* %k, align 4
  br label %bb12

14
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %37 = sdiv i32 %36, 2                           ; <i32> [#uses=1]
  %38 = add i32 %37, 1                            ; <i32> [#uses=1]
  %39 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %40 = icmp sgt i32 %38, %39                     ; <i1> [#uses=1]
  br i1 %40, label %bb2, label %bb13

15
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %41 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %42 = sub i32 %41, 2                            ; <i32> [#uses=1]
  store i32 %42, i32* %g, align 4
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %k, align 4
  br label %bb24

16
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb16

17
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %43 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %44 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %45 = add i32 %44, 1                            ; <i32> [#uses=1]
  store i32 %45, i32* %i, align 4
  br label %bb16

18
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %46 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %47 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %48 = icmp slt i32 %46, %47                     ; <i1> [#uses=1]
  br i1 %48, label %bb15, label %bb17

19
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb19

20
  call void @llvm.dbg.stoppoint(i32 31, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %49 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %50 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %51 = add i32 %50, 1                            ; <i32> [#uses=1]
  store i32 %51, i32* %i, align 4
  br label %bb19

21
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %52 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %53 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %54 = mul i32 %53, 2                            ; <i32> [#uses=1]
  %55 = sub i32 %52, %54                          ; <i32> [#uses=1]
  %56 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %57 = icmp sgt i32 %55, %56                     ; <i1> [#uses=1]
  br i1 %57, label %bb18, label %bb20

22
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb22

23
  call void @llvm.dbg.stoppoint(i32 33, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %58 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %59 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %60 = add i32 %59, 1                            ; <i32> [#uses=1]
  store i32 %60, i32* %i, align 4
  br label %bb22

24
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %61 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %62 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %63 = icmp slt i32 %61, %62                     ; <i1> [#uses=1]
  br i1 %63, label %bb21, label %bb23

25
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %64 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %65 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %66 = sub i32 %65, 1                            ; <i32> [#uses=1]
  store i32 %66, i32* %g, align 4
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %67 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %68 = add i32 %67, 1                            ; <i32> [#uses=1]
  store i32 %68, i32* %k, align 4
  br label %bb24

26
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %69 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %70 = sdiv i32 %69, 2                           ; <i32> [#uses=1]
  %71 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %72 = icmp sgt i32 %70, %71                     ; <i1> [#uses=1]
  br i1 %72, label %bb14, label %bb25

27
  call void @llvm.dbg.stoppoint(i32 40, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %73 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %73, i32* %retval, align 4
  br label %return

28
  %retval26 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 40, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval26
