
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %k = alloca i32                                 ; <i32*> [#uses=1]
  %j = alloca i32                                 ; <i32*> [#uses=5]
  %i2 = alloca i32                                ; <i32*> [#uses=14]
  %i = alloca i32                                 ; <i32*> [#uses=25]
  %n = alloca i32                                 ; <i32*> [#uses=7]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %k to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast i32* %i2 to { }*                   ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  %4 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %5 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str14, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %8 = and i32 %7, 1                              ; <i32> [#uses=1]
  %9 = icmp eq i32 %8, 0                          ; <i1> [#uses=1]
  br i1 %9, label %bb, label %bb1

2
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str15, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb25

3
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i2, align 4
  br label %bb12

4
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb4

5
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %13 = add i32 %12, 1                            ; <i32> [#uses=1]
  store i32 %13, i32* %i, align 4
  br label %bb4

6
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = load i32* %i2, align 4                    ; <i32> [#uses=1]
  %16 = icmp slt i32 %14, %15                     ; <i1> [#uses=1]
  br i1 %16, label %bb3, label %bb5

7
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb7

8
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %18 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %19 = add i32 %18, 1                            ; <i32> [#uses=1]
  store i32 %19, i32* %i, align 4
  br label %bb7

9
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %21 = load i32* %i2, align 4                    ; <i32> [#uses=1]
  %22 = mul i32 %21, 2                            ; <i32> [#uses=1]
  %23 = sub i32 %20, %22                          ; <i32> [#uses=1]
  %24 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %25 = icmp sgt i32 %23, %24                     ; <i1> [#uses=1]
  br i1 %25, label %bb6, label %bb8

10
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb10

11
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %27 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %28 = add i32 %27, 1                            ; <i32> [#uses=1]
  store i32 %28, i32* %i, align 4
  br label %bb10

12
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %29 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %30 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %31 = icmp slt i32 %29, %30                     ; <i1> [#uses=1]
  br i1 %31, label %bb9, label %bb11

13
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %34 = add i32 %33, 1                            ; <i32> [#uses=1]
  store i32 %34, i32* %j, align 4
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %35 = load i32* %i2, align 4                    ; <i32> [#uses=1]
  %36 = add i32 %35, 1                            ; <i32> [#uses=1]
  store i32 %36, i32* %i2, align 4
  br label %bb12

14
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %37 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %38 = sdiv i32 %37, 2                           ; <i32> [#uses=1]
  %39 = add i32 %38, 1                            ; <i32> [#uses=1]
  %40 = load i32* %i2, align 4                    ; <i32> [#uses=1]
  %41 = icmp sgt i32 %39, %40                     ; <i1> [#uses=1]
  br i1 %41, label %bb2, label %bb13

15
  call void @llvm.dbg.stoppoint(i32 36, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %42 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %43 = sdiv i32 %42, 2                           ; <i32> [#uses=1]
  %44 = sub i32 %43, 1                            ; <i32> [#uses=1]
  store i32 %44, i32* %i2, align 4
  br label %bb24

16
  call void @llvm.dbg.stoppoint(i32 38, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb16

17
  call void @llvm.dbg.stoppoint(i32 39, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %45 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 38, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %46 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %47 = add i32 %46, 1                            ; <i32> [#uses=1]
  store i32 %47, i32* %i, align 4
  br label %bb16

18
  call void @llvm.dbg.stoppoint(i32 38, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %48 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %49 = load i32* %i2, align 4                    ; <i32> [#uses=1]
  %50 = icmp slt i32 %48, %49                     ; <i1> [#uses=1]
  br i1 %50, label %bb15, label %bb17

19
  call void @llvm.dbg.stoppoint(i32 41, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb19

20
  call void @llvm.dbg.stoppoint(i32 42, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %51 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 41, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %52 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %53 = add i32 %52, 1                            ; <i32> [#uses=1]
  store i32 %53, i32* %i, align 4
  br label %bb19

21
  call void @llvm.dbg.stoppoint(i32 41, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %54 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %55 = load i32* %i2, align 4                    ; <i32> [#uses=1]
  %56 = mul i32 %55, 2                            ; <i32> [#uses=1]
  %57 = sub i32 %54, %56                          ; <i32> [#uses=1]
  %58 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %59 = icmp sgt i32 %57, %58                     ; <i1> [#uses=1]
  br i1 %59, label %bb18, label %bb20

22
  call void @llvm.dbg.stoppoint(i32 44, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb22

23
  call void @llvm.dbg.stoppoint(i32 45, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %60 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 44, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %61 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %62 = add i32 %61, 1                            ; <i32> [#uses=1]
  store i32 %62, i32* %i, align 4
  br label %bb22

24
  call void @llvm.dbg.stoppoint(i32 44, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %63 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %64 = load i32* %i2, align 4                    ; <i32> [#uses=1]
  %65 = icmp slt i32 %63, %64                     ; <i1> [#uses=1]
  br i1 %65, label %bb21, label %bb23

25
  call void @llvm.dbg.stoppoint(i32 47, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %66 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 36, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %67 = load i32* %i2, align 4                    ; <i32> [#uses=1]
  %68 = sub i32 %67, 1                            ; <i32> [#uses=1]
  store i32 %68, i32* %i2, align 4
  br label %bb24

26
  call void @llvm.dbg.stoppoint(i32 36, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %69 = load i32* %i2, align 4                    ; <i32> [#uses=1]
  %70 = icmp sge i32 %69, 0                       ; <i1> [#uses=1]
  br i1 %70, label %bb14, label %bb25

27
  call void @llvm.dbg.stoppoint(i32 52, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %71 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %71, i32* %retval, align 4
  br label %return

28
  %retval26 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 52, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval26
