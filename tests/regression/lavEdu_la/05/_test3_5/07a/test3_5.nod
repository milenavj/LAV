
1
  %s_addr = alloca i8*                            ; <i8**> [#uses=5]
  %k_addr = alloca i32                            ; <i32*> [#uses=3]
  %i = alloca i32                                 ; <i32*> [#uses=7]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %0 = bitcast i8** %s_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store i8* %s, i8** %s_addr
  %1 = bitcast i32* %k_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  store i32 %k, i32* %k_addr
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %3 = load i32* %k_addr, align 4                 ; <i32> [#uses=1]
  %4 = add i32 %3, 1                              ; <i32> [#uses=1]
  store i32 %4, i32* %i, align 4
  br label %bb1

2
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %6 = sub i32 %5, 1                              ; <i32> [#uses=1]
  %7 = load i8** %s_addr, align 4                 ; <i8*> [#uses=1]
  %8 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %9 = getelementptr i8* %7, i32 %8               ; <i8*> [#uses=1]
  %10 = load i8* %9, align 1                      ; <i8> [#uses=1]
  %11 = load i8** %s_addr, align 4                ; <i8*> [#uses=1]
  %12 = getelementptr i8* %11, i32 %6             ; <i8*> [#uses=1]
  store i8 %10, i8* %12, align 1
  %13 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %14 = add i32 %13, 1                            ; <i32> [#uses=1]
  store i32 %14, i32* %i, align 4
  br label %bb1

3
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load i8** %s_addr, align 4                ; <i8*> [#uses=1]
  %16 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %17 = getelementptr i8* %15, i32 %16            ; <i8*> [#uses=1]
  %18 = load i8* %17, align 1                     ; <i8> [#uses=1]
  %19 = icmp ne i8 %18, 0                         ; <i1> [#uses=1]
  br i1 %19, label %bb, label %bb2

4
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  br label %return

5
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret void

6
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %j = alloca i32                                 ; <i32*> [#uses=6]
  %i = alloca i32                                 ; <i32*> [#uses=7]
  %k = alloca i32                                 ; <i32*> [#uses=6]
  %s = alloca [21 x i8]                           ; <[21 x i8]*> [#uses=5]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram15 to { }*))
  %1 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable17 to { }*))
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable18 to { }*))
  %3 = bitcast i32* %k to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable19 to { }*))
  %4 = bitcast [21 x i8]* %s to { }*              ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable22 to { }*))
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str23, i32 0, i32 0), i32* %k) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %s1 = bitcast [21 x i8]* %s to i8*              ; <i8*> [#uses=1]
  %6 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str24, i32 0, i32 0), i8* %s1) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb2

7
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %8 = add i32 %7, 1                              ; <i32> [#uses=1]
  store i32 %8, i32* %i, align 4
  br label %bb2

8
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %10 = getelementptr [21 x i8]* %s, i32 0, i32 %9 ; <i8*> [#uses=1]
  %11 = load i8* %10, align 1                     ; <i8> [#uses=1]
  %12 = icmp ne i8 %11, 0                         ; <i1> [#uses=1]
  br i1 %12, label %bb, label %bb3

9
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %14 = icmp slt i32 %13, 0                       ; <i1> [#uses=1]
  br i1 %14, label %bb6, label %bb4

10
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %16 = icmp sgt i32 %15, 20                      ; <i1> [#uses=1]
  br i1 %16, label %bb6, label %bb5

11
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %18 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %19 = icmp sge i32 %17, %18                     ; <i1> [#uses=1]
  br i1 %19, label %bb6, label %bb7

12
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = call i32 @puts(i8* getelementptr ([3 x i8]* @.str25, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb12

13
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %s8 = bitcast [21 x i8]* %s to i8*              ; <i8*> [#uses=1]
  call void @izbaci(i8* %s8, i32 %21) nounwind

14
  call void @izbaci(i8* %s8, i32 %21) nounwind
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str26, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb10

15
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %23 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %24 = getelementptr [21 x i8]* %s, i32 0, i32 %23 ; <i8*> [#uses=1]
  %25 = load i8* %24, align 1                     ; <i8> [#uses=1]
  %26 = sext i8 %25 to i32                        ; <i32> [#uses=1]
  %27 = call i32 @putchar(i32 %26) nounwind       ; <i32> [#uses=0]
  %28 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %29 = add i32 %28, 1                            ; <i32> [#uses=1]
  store i32 %29, i32* %j, align 4
  br label %bb10

16
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %30 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %31 = sub i32 %30, 1                            ; <i32> [#uses=1]
  %32 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %33 = icmp sgt i32 %31, %32                     ; <i1> [#uses=1]
  br i1 %33, label %bb9, label %bb11

17
  call void @llvm.dbg.stoppoint(i32 31, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %34 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb12

18
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %35 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %35, i32* %retval, align 4
  br label %return

19
  %retval13 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram15 to { }*))
  ret i32 %retval13
