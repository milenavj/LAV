
1
  %rec_addr = alloca i8*                          ; <i8**> [#uses=5]
  %k_addr = alloca i32                            ; <i32*> [#uses=6]
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %i = alloca i32                                 ; <i32*> [#uses=9]
  %0 = alloca i32                                 ; <i32*> [#uses=4]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i8** %rec_addr to { }*             ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store i8* %rec, i8** %rec_addr
  %2 = bitcast i32* %k_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  store i32 %k, i32* %k_addr
  %3 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %4 = load i32* %k_addr, align 4                 ; <i32> [#uses=1]
  %5 = icmp slt i32 %4, 0                         ; <i1> [#uses=1]
  br i1 %5, label %bb1, label %bb

2
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load i32* %k_addr, align 4                 ; <i32> [#uses=1]
  %7 = icmp sgt i32 %6, 21                        ; <i1> [#uses=1]
  br i1 %7, label %bb1, label %bb2

3
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb10

4
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb6

5
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %9 = load i32* %k_addr, align 4                 ; <i32> [#uses=1]
  %10 = icmp sge i32 %8, %9                       ; <i1> [#uses=1]
  br i1 %10, label %bb4, label %bb5

6
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %12 = add i32 %11, 1                            ; <i32> [#uses=1]
  %13 = load i8** %rec_addr, align 4              ; <i8*> [#uses=1]
  %14 = getelementptr i8* %13, i32 %12            ; <i8*> [#uses=1]
  %15 = load i8* %14, align 1                     ; <i8> [#uses=1]
  %16 = load i8** %rec_addr, align 4              ; <i8*> [#uses=1]
  %17 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %18 = getelementptr i8* %16, i32 %17            ; <i8*> [#uses=1]
  store i8 %15, i8* %18, align 1
  br label %bb5

7
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %20 = add i32 %19, 1                            ; <i32> [#uses=1]
  store i32 %20, i32* %i, align 4
  br label %bb6

8
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i8** %rec_addr, align 4              ; <i8*> [#uses=1]
  %22 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %23 = getelementptr i8* %21, i32 %22            ; <i8*> [#uses=1]
  %24 = load i8* %23, align 1                     ; <i8> [#uses=1]
  %25 = icmp ne i8 %24, 0                         ; <i1> [#uses=1]
  br i1 %25, label %bb3, label %bb7

9
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %27 = load i32* %k_addr, align 4                ; <i32> [#uses=1]
  %28 = icmp sle i32 %26, %27                     ; <i1> [#uses=1]
  br i1 %28, label %bb8, label %bb9

10
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb10

11
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %0, align 4
  br label %bb10

12
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %29 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %29, i32* %retval, align 4
  br label %return

13
  %retval11 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval11

14
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %n = alloca i32                                 ; <i32*> [#uses=1]
  %poz = alloca i32                               ; <i32*> [#uses=3]
  %rec = alloca [21 x i8]                         ; <[21 x i8]*> [#uses=4]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram15 to { }*))
  %1 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable17 to { }*))
  %2 = bitcast i32* %poz to { }*                  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable19 to { }*))
  %3 = bitcast [21 x i8]* %rec to { }*            ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable22 to { }*))
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %4 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str23, i32 0, i32 0), i32* %poz) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %rec1 = bitcast [21 x i8]* %rec to i8*          ; <i8*> [#uses=1]
  %5 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str24, i32 0, i32 0), i8* %rec1) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load i32* %poz, align 4                    ; <i32> [#uses=1]
  %rec2 = bitcast [21 x i8]* %rec to i8*          ; <i8*> [#uses=1]
  %7 = call i32 @izbaci(i8* %rec2, i32 %6) nounwind ; <i32> [#uses=1]

15
  %7 = call i32 @izbaci(i8* %rec2, i32 %6) nounwind ; <i32> [#uses=1]
  %8 = icmp eq i32 %7, 1                          ; <i1> [#uses=1]
  br i1 %8, label %bb, label %bb4

16
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([4 x i8]* @.str25, i32 0, i32 0), i32 1) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 33, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %rec3 = bitcast [21 x i8]* %rec to i8*          ; <i8*> [#uses=1]
  %10 = call i32 @puts(i8* %rec3) nounwind        ; <i32> [#uses=0]
  br label %bb5

17
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([4 x i8]* @.str25, i32 0, i32 0), i32 -1) nounwind ; <i32> [#uses=0]
  br label %bb5

18
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %12 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %12, i32* %retval, align 4
  br label %return

19
  %retval6 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram15 to { }*))
  ret i32 %retval6
