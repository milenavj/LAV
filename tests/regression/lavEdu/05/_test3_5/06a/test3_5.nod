
1
  %s_addr = alloca i8*                            ; <i8**> [#uses=7]
  %k_addr = alloca i32                            ; <i32*> [#uses=5]
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %n = alloca i32                                 ; <i32*> [#uses=5]
  %i = alloca i32                                 ; <i32*> [#uses=8]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i8** %s_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store i8* %s, i8** %s_addr
  %2 = bitcast i32* %k_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  store i32 %k, i32* %k_addr
  %3 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %4 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %n, align 4
  br label %bb1

2
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %6 = add i32 %5, 1                              ; <i32> [#uses=1]
  store i32 %6, i32* %n, align 4
  br label %bb1

3
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = load i8** %s_addr, align 4                 ; <i8*> [#uses=1]
  %8 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %9 = getelementptr i8* %7, i32 %8               ; <i8*> [#uses=1]
  %10 = load i8* %9, align 1                      ; <i8> [#uses=1]
  %11 = icmp ne i8 %10, 0                         ; <i1> [#uses=1]
  br i1 %11, label %bb, label %bb2

4
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = load i32* %k_addr, align 4                ; <i32> [#uses=1]
  %13 = icmp slt i32 %12, 0                       ; <i1> [#uses=1]
  br i1 %13, label %bb4, label %bb3

5
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %k_addr, align 4                ; <i32> [#uses=1]
  %15 = icmp sgt i32 %14, 19                      ; <i1> [#uses=1]
  br i1 %15, label %bb4, label %bb5

6
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb9

7
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = load i32* %k_addr, align 4                ; <i32> [#uses=1]
  store i32 %16, i32* %i, align 4
  br label %bb7

8
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %18 = add i32 %17, 1                            ; <i32> [#uses=1]
  %19 = load i8** %s_addr, align 4                ; <i8*> [#uses=1]
  %20 = getelementptr i8* %19, i32 %18            ; <i8*> [#uses=1]
  %21 = load i8* %20, align 1                     ; <i8> [#uses=1]
  %22 = load i8** %s_addr, align 4                ; <i8*> [#uses=1]
  %23 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %24 = getelementptr i8* %22, i32 %23            ; <i8*> [#uses=1]
  store i8 %21, i8* %24, align 1
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %26 = add i32 %25, 1                            ; <i32> [#uses=1]
  store i32 %26, i32* %i, align 4
  br label %bb7

9
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %27 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %28 = add i32 %27, 1                            ; <i32> [#uses=1]
  %29 = load i8** %s_addr, align 4                ; <i8*> [#uses=1]
  %30 = getelementptr i8* %29, i32 %28            ; <i8*> [#uses=1]
  %31 = load i8* %30, align 1                     ; <i8> [#uses=1]
  %32 = icmp ne i8 %31, 0                         ; <i1> [#uses=1]
  br i1 %32, label %bb6, label %bb8

10
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = load i8** %s_addr, align 4                ; <i8*> [#uses=1]
  %34 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %35 = getelementptr i8* %33, i32 %34            ; <i8*> [#uses=1]
  store i8 0, i8* %35, align 1
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %0, align 4
  br label %bb9

11
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %36, i32* %retval, align 4
  br label %return

12
  %retval10 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval10

13
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %s = alloca [20 x i8]                           ; <[20 x i8]*> [#uses=5]
  %n = alloca i32                                 ; <i32*> [#uses=6]
  %k = alloca i32                                 ; <i32*> [#uses=5]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram17 to { }*))
  %1 = bitcast [20 x i8]* %s to { }*              ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable20 to { }*))
  %2 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable21 to { }*))
  %3 = bitcast i32* %k to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable22 to { }*))
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %n, align 4
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %4 = call i32 @puts(i8* getelementptr ([16 x i8]* @.str23, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str24, i32 0, i32 0), i32* %k) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = call i32 @puts(i8* getelementptr ([11 x i8]* @.str25, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %s1 = bitcast [20 x i8]* %s to i8*              ; <i8*> [#uses=1]
  %7 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str26, i32 0, i32 0), i8* %s1) nounwind ; <i32> [#uses=0]
  br label %bb2

14
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %9 = add i32 %8, 1                              ; <i32> [#uses=1]
  store i32 %9, i32* %n, align 4
  br label %bb2

15
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %11 = getelementptr [20 x i8]* %s, i32 0, i32 %10 ; <i8*> [#uses=1]
  %12 = load i8* %11, align 1                     ; <i8> [#uses=1]
  %13 = icmp ne i8 %12, 0                         ; <i1> [#uses=1]
  br i1 %13, label %bb, label %bb3

16
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %15 = icmp slt i32 %14, 0                       ; <i1> [#uses=1]
  br i1 %15, label %bb5, label %bb4

17
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %17 = sub i32 %16, 1                            ; <i32> [#uses=1]
  %18 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %19 = icmp slt i32 %17, %18                     ; <i1> [#uses=1]
  br i1 %19, label %bb5, label %bb6

18
  call void @llvm.dbg.stoppoint(i32 31, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = call i32 @puts(i8* getelementptr ([3 x i8]* @.str27, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb11

19
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %s7 = bitcast [20 x i8]* %s to i8*              ; <i8*> [#uses=1]
  %22 = call i32 @izbaci(i8* %s7, i32 %21) nounwind ; <i32> [#uses=1]

20
  %22 = call i32 @izbaci(i8* %s7, i32 %21) nounwind ; <i32> [#uses=1]
  %23 = icmp eq i32 %22, 1                        ; <i1> [#uses=1]
  br i1 %23, label %bb8, label %bb10

21
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %24 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str28, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %s9 = bitcast [20 x i8]* %s to i8*              ; <i8*> [#uses=1]
  %25 = call i32 @puts(i8* %s9) nounwind          ; <i32> [#uses=0]
  br label %bb11

22
  call void @llvm.dbg.stoppoint(i32 38, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = call i32 @puts(i8* getelementptr ([3 x i8]* @.str27, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb11

23
  call void @llvm.dbg.stoppoint(i32 40, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %27 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %27, i32* %retval, align 4
  br label %return

24
  %retval12 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 40, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram17 to { }*))
  ret i32 %retval12
