
1
  %s_addr = alloca i8*                            ; <i8**> [#uses=6]
  %k_addr = alloca i32                            ; <i32*> [#uses=5]
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %j = alloca i32                                 ; <i32*> [#uses=7]
  %n = alloca i32                                 ; <i32*> [#uses=2]
  %i = alloca i32                                 ; <i32*> [#uses=5]
  %br = alloca i32                                ; <i32*> [#uses=5]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i8** %s_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store i8* %s, i8** %s_addr
  %2 = bitcast i32* %k_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  store i32 %k, i32* %k_addr
  %3 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %4 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  %5 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable15 to { }*))
  %6 = bitcast i32* %br to { }*                   ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %6, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable17 to { }*))
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %br, align 4
  store i32 0, i32* %i, align 4
  store i32 0, i32* %n, align 4
  br label %bb1

2
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = load i32* %br, align 4                     ; <i32> [#uses=1]
  %8 = add i32 %7, 1                              ; <i32> [#uses=1]
  store i32 %8, i32* %br, align 4
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %10 = add i32 %9, 1                             ; <i32> [#uses=1]
  store i32 %10, i32* %i, align 4
  br label %bb1

3
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = load i8** %s_addr, align 4                ; <i8*> [#uses=1]
  %12 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %13 = getelementptr i8* %11, i32 %12            ; <i8*> [#uses=1]
  %14 = load i8* %13, align 1                     ; <i8> [#uses=1]
  %15 = icmp ne i8 %14, 0                         ; <i1> [#uses=1]
  br i1 %15, label %bb, label %bb2

4
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = load i32* %k_addr, align 4                ; <i32> [#uses=1]
  %17 = load i32* %br, align 4                    ; <i32> [#uses=1]
  %18 = icmp sge i32 %16, %17                     ; <i1> [#uses=1]
  br i1 %18, label %bb4, label %bb3

5
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %k_addr, align 4                ; <i32> [#uses=1]
  %20 = icmp slt i32 %19, 0                       ; <i1> [#uses=1]
  br i1 %20, label %bb4, label %bb5

6
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb9

7
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i32* %k_addr, align 4                ; <i32> [#uses=1]
  store i32 %21, i32* %j, align 4
  br label %bb7

8
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %23 = add i32 %22, 1                            ; <i32> [#uses=1]
  %24 = load i8** %s_addr, align 4                ; <i8*> [#uses=1]
  %25 = getelementptr i8* %24, i32 %23            ; <i8*> [#uses=1]
  %26 = load i8* %25, align 1                     ; <i8> [#uses=1]
  %27 = load i8** %s_addr, align 4                ; <i8*> [#uses=1]
  %28 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %29 = getelementptr i8* %27, i32 %28            ; <i8*> [#uses=1]
  store i8 %26, i8* %29, align 1
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %30 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %31 = add i32 %30, 1                            ; <i32> [#uses=1]
  store i32 %31, i32* %j, align 4
  br label %bb7

9
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = load i8** %s_addr, align 4                ; <i8*> [#uses=1]
  %33 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %34 = getelementptr i8* %32, i32 %33            ; <i8*> [#uses=1]
  %35 = load i8* %34, align 1                     ; <i8> [#uses=1]
  %36 = icmp ne i8 %35, 0                         ; <i1> [#uses=1]
  br i1 %36, label %bb6, label %bb8

10
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %0, align 4
  br label %bb9

11
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %37 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %37, i32* %retval, align 4
  br label %return

12
  %retval10 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval10

13
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %i = alloca i32                                 ; <i32*> [#uses=2]
  %k = alloca i32                                 ; <i32*> [#uses=3]
  %s = alloca [21 x i8]                           ; <[21 x i8]*> [#uses=4]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram21 to { }*))
  %1 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable22 to { }*))
  %2 = bitcast i32* %k to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable23 to { }*))
  %3 = bitcast [21 x i8]* %s to { }*              ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable26 to { }*))
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %4 = call i32 @puts(i8* getelementptr ([16 x i8]* @.str27, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str28, i32 0, i32 0), i32* %k) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = call i32 @puts(i8* getelementptr ([11 x i8]* @.str29, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %s1 = bitcast [21 x i8]* %s to i8*              ; <i8*> [#uses=1]
  %7 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str30, i32 0, i32 0), i8* %s1) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = load i32* %k, align 4                      ; <i32> [#uses=1]
  %s2 = bitcast [21 x i8]* %s to i8*              ; <i8*> [#uses=1]
  %9 = call i32 @izbaci(i8* %s2, i32 %8) nounwind ; <i32> [#uses=1]

14
  %9 = call i32 @izbaci(i8* %s2, i32 %8) nounwind ; <i32> [#uses=1]
  %10 = icmp eq i32 %9, 0                         ; <i1> [#uses=1]
  br i1 %10, label %bb4, label %bb

15
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str31, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 31, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %s3 = bitcast [21 x i8]* %s to i8*              ; <i8*> [#uses=1]
  %12 = call i32 @puts(i8* %s3) nounwind          ; <i32> [#uses=0]
  br label %bb5

16
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = call i32 @puts(i8* getelementptr ([3 x i8]* @.str32, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb5

17
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %14 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %14, i32* %retval, align 4
  br label %return

18
  %retval6 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram21 to { }*))
  ret i32 %retval6
