
1
  %a_addr = alloca %llvm.dbg.anchor.type          ; <%llvm.dbg.anchor.type*> [#uses=5]
  %b_addr = alloca %llvm.dbg.anchor.type          ; <%llvm.dbg.anchor.type*> [#uses=5]
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast %llvm.dbg.anchor.type* %a_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = getelementptr %llvm.dbg.anchor.type* %a_addr, i32 0, i32 0 ; <i32*> [#uses=1]
  store i32 %a.0, i32* %2
  %3 = getelementptr %llvm.dbg.anchor.type* %a_addr, i32 0, i32 1 ; <i32*> [#uses=1]
  store i32 %a.1, i32* %3
  %4 = bitcast %llvm.dbg.anchor.type* %b_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable15 to { }*))
  %5 = getelementptr %llvm.dbg.anchor.type* %b_addr, i32 0, i32 0 ; <i32*> [#uses=1]
  store i32 %b.0, i32* %5
  %6 = getelementptr %llvm.dbg.anchor.type* %b_addr, i32 0, i32 1 ; <i32*> [#uses=1]
  store i32 %b.1, i32* %6
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = getelementptr %llvm.dbg.anchor.type* %a_addr, i32 0, i32 0 ; <i32*> [#uses=1]
  %8 = load i32* %7, align 4                      ; <i32> [#uses=1]
  %9 = getelementptr %llvm.dbg.anchor.type* %b_addr, i32 0, i32 1 ; <i32*> [#uses=1]
  %10 = load i32* %9, align 4                     ; <i32> [#uses=1]
  %11 = mul i32 %8, %10                           ; <i32> [#uses=1]
  %12 = getelementptr %llvm.dbg.anchor.type* %a_addr, i32 0, i32 1 ; <i32*> [#uses=1]
  %13 = load i32* %12, align 4                    ; <i32> [#uses=1]
  %14 = getelementptr %llvm.dbg.anchor.type* %b_addr, i32 0, i32 0 ; <i32*> [#uses=1]
  %15 = load i32* %14, align 4                    ; <i32> [#uses=1]
  %16 = mul i32 %13, %15                          ; <i32> [#uses=1]
  %17 = icmp ule i32 %11, %16                     ; <i1> [#uses=1]
  %18 = zext i1 %17 to i32                        ; <i32> [#uses=1]
  store i32 %18, i32* %0, align 4
  %19 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %19, i32* %retval, align 4
  br label %return

2
  %retval1 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval1

3
  %razlomci_addr = alloca %llvm.dbg.anchor.type*  ; <%llvm.dbg.anchor.type**> [#uses=4]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %i = alloca i32                                 ; <i32*> [#uses=7]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram20 to { }*))
  %0 = bitcast %llvm.dbg.anchor.type** %razlomci_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable22 to { }*))
  store %llvm.dbg.anchor.type* %razlomci, %llvm.dbg.anchor.type** %razlomci_addr
  %1 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable24 to { }*))
  store i32 %n, i32* %n_addr
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable28 to { }*))
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb1

4
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %3 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %4 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %5 = getelementptr %llvm.dbg.anchor.type* %3, i32 %4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %6 = getelementptr %llvm.dbg.anchor.type* %5, i32 0, i32 1 ; <i32*> [#uses=1]
  %7 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %8 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %9 = getelementptr %llvm.dbg.anchor.type* %7, i32 %8 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %10 = getelementptr %llvm.dbg.anchor.type* %9, i32 0, i32 0 ; <i32*> [#uses=1]
  %11 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([5 x i8]* @.str29, i32 0, i32 0), i32* %10, i32* %6) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %13 = add i32 %12, 1                            ; <i32> [#uses=1]
  store i32 %13, i32* %i, align 4
  br label %bb1

5
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %16 = icmp ult i32 %14, %15                     ; <i1> [#uses=1]
  br i1 %16, label %bb, label %bb2

6
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  br label %return

7
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram20 to { }*))
  ret void

8
  %razlomci_addr = alloca %llvm.dbg.anchor.type*  ; <%llvm.dbg.anchor.type**> [#uses=4]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %i = alloca i32                                 ; <i32*> [#uses=7]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram31 to { }*))
  %0 = bitcast %llvm.dbg.anchor.type** %razlomci_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable32 to { }*))
  store %llvm.dbg.anchor.type* %razlomci, %llvm.dbg.anchor.type** %razlomci_addr
  %1 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable33 to { }*))
  store i32 %n, i32* %n_addr
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable34 to { }*))
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb1

9
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %3 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %4 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %5 = getelementptr %llvm.dbg.anchor.type* %3, i32 %4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %6 = getelementptr %llvm.dbg.anchor.type* %5, i32 0, i32 1 ; <i32*> [#uses=1]
  %7 = load i32* %6, align 4                      ; <i32> [#uses=1]
  %8 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %9 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %10 = getelementptr %llvm.dbg.anchor.type* %8, i32 %9 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %11 = getelementptr %llvm.dbg.anchor.type* %10, i32 0, i32 0 ; <i32*> [#uses=1]
  %12 = load i32* %11, align 4                    ; <i32> [#uses=1]
  %13 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([7 x i8]* @.str35, i32 0, i32 0), i32 %12, i32 %7) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = add i32 %14, 1                            ; <i32> [#uses=1]
  store i32 %15, i32* %i, align 4
  br label %bb1

10
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %17 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %18 = icmp ult i32 %16, %17                     ; <i1> [#uses=1]
  br i1 %18, label %bb, label %bb2

11
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  br label %return

12
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram31 to { }*))
  ret void

13
  %razlomci_addr = alloca %llvm.dbg.anchor.type*  ; <%llvm.dbg.anchor.type**> [#uses=7]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %izlaz = alloca %llvm.dbg.anchor.type           ; <%llvm.dbg.anchor.type*> [#uses=9]
  %i = alloca i32                                 ; <i32*> [#uses=8]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram39 to { }*))
  %0 = bitcast %llvm.dbg.anchor.type** %razlomci_addr to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable40 to { }*))
  store %llvm.dbg.anchor.type* %razlomci, %llvm.dbg.anchor.type** %razlomci_addr
  %1 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable41 to { }*))
  store i32 %n, i32* %n_addr
  %2 = bitcast %llvm.dbg.anchor.type* %izlaz to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable43 to { }*))
  %3 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable44 to { }*))
  call void @llvm.dbg.stoppoint(i32 46, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %4 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %5 = getelementptr %llvm.dbg.anchor.type* %4, i32 0 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %6 = getelementptr %llvm.dbg.anchor.type* %5, i32 0, i32 0 ; <i32*> [#uses=1]
  %7 = load i32* %6, align 4                      ; <i32> [#uses=1]
  %8 = getelementptr %llvm.dbg.anchor.type* %izlaz, i32 0, i32 0 ; <i32*> [#uses=1]
  store i32 %7, i32* %8, align 4
  call void @llvm.dbg.stoppoint(i32 47, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %10 = getelementptr %llvm.dbg.anchor.type* %9, i32 0 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %11 = getelementptr %llvm.dbg.anchor.type* %10, i32 0, i32 1 ; <i32*> [#uses=1]
  %12 = load i32* %11, align 4                    ; <i32> [#uses=1]
  %13 = getelementptr %llvm.dbg.anchor.type* %izlaz, i32 0, i32 1 ; <i32*> [#uses=1]
  store i32 %12, i32* %13, align 4
  call void @llvm.dbg.stoppoint(i32 48, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %i, align 4
  br label %bb9

14
  call void @llvm.dbg.stoppoint(i32 49, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %elt = getelementptr %llvm.dbg.anchor.type* %izlaz, i32 0, i32 0 ; <i32*> [#uses=1]
  %val = load i32* %elt                           ; <i32> [#uses=1]
  %elt1 = getelementptr %llvm.dbg.anchor.type* %izlaz, i32 0, i32 1 ; <i32*> [#uses=1]
  %val2 = load i32* %elt1                         ; <i32> [#uses=1]
  %14 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %15 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %16 = getelementptr %llvm.dbg.anchor.type* %14, i32 %15 ; <%llvm.dbg.anchor.type*> [#uses=2]
  %elt3 = getelementptr %llvm.dbg.anchor.type* %16, i32 0, i32 0 ; <i32*> [#uses=1]
  %val4 = load i32* %elt3                         ; <i32> [#uses=1]
  %elt5 = getelementptr %llvm.dbg.anchor.type* %16, i32 0, i32 1 ; <i32*> [#uses=1]
  %val6 = load i32* %elt5                         ; <i32> [#uses=1]
  %17 = call i32 @manji_ili_jednak(i32 %val, i32 %val2, i32 %val4, i32 %val6) nounwind ; <i32> [#uses=1]

15
  %17 = call i32 @manji_ili_jednak(i32 %val, i32 %val2, i32 %val4, i32 %val6) nounwind ; <i32> [#uses=1]
  %18 = icmp ne i32 %17, 0                        ; <i1> [#uses=1]
  br i1 %18, label %bb7, label %bb8

16
  call void @llvm.dbg.stoppoint(i32 51, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %20 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %21 = getelementptr %llvm.dbg.anchor.type* %19, i32 %20 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %22 = getelementptr %llvm.dbg.anchor.type* %21, i32 0, i32 0 ; <i32*> [#uses=1]
  %23 = load i32* %22, align 4                    ; <i32> [#uses=1]
  %24 = getelementptr %llvm.dbg.anchor.type* %izlaz, i32 0, i32 0 ; <i32*> [#uses=1]
  store i32 %23, i32* %24, align 4
  call void @llvm.dbg.stoppoint(i32 52, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load %llvm.dbg.anchor.type** %razlomci_addr, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %26 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %27 = getelementptr %llvm.dbg.anchor.type* %25, i32 %26 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %28 = getelementptr %llvm.dbg.anchor.type* %27, i32 0, i32 1 ; <i32*> [#uses=1]
  %29 = load i32* %28, align 4                    ; <i32> [#uses=1]
  %30 = getelementptr %llvm.dbg.anchor.type* %izlaz, i32 0, i32 1 ; <i32*> [#uses=1]
  store i32 %29, i32* %30, align 4
  br label %bb8

17
  call void @llvm.dbg.stoppoint(i32 48, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %31 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %32 = add i32 %31, 1                            ; <i32> [#uses=1]
  store i32 %32, i32* %i, align 4
  br label %bb9

18
  call void @llvm.dbg.stoppoint(i32 48, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %34 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %35 = icmp ult i32 %33, %34                     ; <i1> [#uses=1]
  br i1 %35, label %bb, label %bb10

19
  call void @llvm.dbg.stoppoint(i32 55, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = getelementptr %llvm.dbg.anchor.type* %agg.result, i32 0, i32 0 ; <i32*> [#uses=1]
  %37 = getelementptr %llvm.dbg.anchor.type* %izlaz, i32 0, i32 0 ; <i32*> [#uses=1]
  %38 = load i32* %37, align 4                    ; <i32> [#uses=1]
  store i32 %38, i32* %36, align 4
  %39 = getelementptr %llvm.dbg.anchor.type* %agg.result, i32 0, i32 1 ; <i32*> [#uses=1]
  %40 = getelementptr %llvm.dbg.anchor.type* %izlaz, i32 0, i32 1 ; <i32*> [#uses=1]
  %41 = load i32* %40, align 4                    ; <i32> [#uses=1]
  store i32 %41, i32* %39, align 4
  br label %return

20
  call void @llvm.dbg.stoppoint(i32 55, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram39 to { }*))
  ret void

21
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %i = alloca i32                                 ; <i32*> [#uses=1]
  %N = alloca i32                                 ; <i32*> [#uses=6]
  %rmax = alloca %llvm.dbg.anchor.type            ; <%llvm.dbg.anchor.type*> [#uses=4]
  %razlomci = alloca %llvm.dbg.anchor.type*       ; <%llvm.dbg.anchor.type**> [#uses=6]
  %r2 = alloca %llvm.dbg.anchor.type              ; <%llvm.dbg.anchor.type*> [#uses=4]
  %r1 = alloca %llvm.dbg.anchor.type              ; <%llvm.dbg.anchor.type*> [#uses=4]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %memtmp = alloca %llvm.dbg.anchor.type, align 8 ; <%llvm.dbg.anchor.type*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram48 to { }*))
  %1 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable49 to { }*))
  %2 = bitcast i32* %N to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable51 to { }*))
  %3 = bitcast %llvm.dbg.anchor.type* %rmax to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable53 to { }*))
  %4 = bitcast %llvm.dbg.anchor.type** %razlomci to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable54 to { }*))
  %5 = bitcast %llvm.dbg.anchor.type* %r2 to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable56 to { }*))
  %6 = bitcast %llvm.dbg.anchor.type* %r1 to { }* ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %6, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable58 to { }*))
  call void @llvm.dbg.stoppoint(i32 64, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @ucitaj_razlomke(%llvm.dbg.anchor.type* %r1, i32 1) nounwind

22
  call void @ucitaj_razlomke(%llvm.dbg.anchor.type* %r1, i32 1) nounwind
  call void @llvm.dbg.stoppoint(i32 66, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @ucitaj_razlomke(%llvm.dbg.anchor.type* %r2, i32 1) nounwind

23
  call void @ucitaj_razlomke(%llvm.dbg.anchor.type* %r2, i32 1) nounwind
  call void @llvm.dbg.stoppoint(i32 67, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %elt = getelementptr %llvm.dbg.anchor.type* %r1, i32 0, i32 0 ; <i32*> [#uses=1]
  %val = load i32* %elt                           ; <i32> [#uses=1]
  %elt1 = getelementptr %llvm.dbg.anchor.type* %r1, i32 0, i32 1 ; <i32*> [#uses=1]
  %val2 = load i32* %elt1                         ; <i32> [#uses=1]
  %elt3 = getelementptr %llvm.dbg.anchor.type* %r2, i32 0, i32 0 ; <i32*> [#uses=1]
  %val4 = load i32* %elt3                         ; <i32> [#uses=1]
  %elt5 = getelementptr %llvm.dbg.anchor.type* %r2, i32 0, i32 1 ; <i32*> [#uses=1]
  %val6 = load i32* %elt5                         ; <i32> [#uses=1]
  %7 = call i32 @manji_ili_jednak(i32 %val, i32 %val2, i32 %val4, i32 %val6) nounwind ; <i32> [#uses=1]

24
  %7 = call i32 @manji_ili_jednak(i32 %val, i32 %val2, i32 %val4, i32 %val6) nounwind ; <i32> [#uses=1]
  %8 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([9 x i8]* @.str59, i32 0, i32 0), i32 %7) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 69, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str60, i32 0, i32 0), i32* %N) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 70, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %N, align 4                     ; <i32> [#uses=1]
  %11 = mul i32 %10, 8                            ; <i32> [#uses=1]
  %12 = call i8* @malloc(i32 %11) nounwind        ; <i8*> [#uses=1]
  %13 = bitcast i8* %12 to %llvm.dbg.anchor.type* ; <%llvm.dbg.anchor.type*> [#uses=1]
  store %llvm.dbg.anchor.type* %13, %llvm.dbg.anchor.type** %razlomci, align 4
  call void @llvm.dbg.stoppoint(i32 71, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load %llvm.dbg.anchor.type** %razlomci, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  %15 = icmp eq %llvm.dbg.anchor.type* %14, null  ; <i1> [#uses=1]
  br i1 %15, label %bb, label %bb7

25
  call void @llvm.dbg.stoppoint(i32 73, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = call i32 @puts(i8* getelementptr ([8 x i8]* @.str61, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 74, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %0, align 4
  br label %bb8

26
  call void @llvm.dbg.stoppoint(i32 76, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %N, align 4                     ; <i32> [#uses=1]
  %18 = load %llvm.dbg.anchor.type** %razlomci, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  call void @ucitaj_razlomke(%llvm.dbg.anchor.type* %18, i32 %17) nounwind

27
  call void @ucitaj_razlomke(%llvm.dbg.anchor.type* %18, i32 %17) nounwind
  call void @llvm.dbg.stoppoint(i32 77, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([6 x i8]* @.str62, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 78, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load i32* %N, align 4                     ; <i32> [#uses=1]
  %21 = load %llvm.dbg.anchor.type** %razlomci, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  call void @ispisi_razlomke(%llvm.dbg.anchor.type* %21, i32 %20) nounwind

28
  call void @ispisi_razlomke(%llvm.dbg.anchor.type* %21, i32 %20) nounwind
  call void @llvm.dbg.stoppoint(i32 79, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 81, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %23 = load i32* %N, align 4                     ; <i32> [#uses=1]
  %24 = load %llvm.dbg.anchor.type** %razlomci, align 4 ; <%llvm.dbg.anchor.type*> [#uses=1]
  call void @maksimum(%llvm.dbg.anchor.type* noalias sret %memtmp, %llvm.dbg.anchor.type* %24, i32 %23) nounwind

29
  call void @maksimum(%llvm.dbg.anchor.type* noalias sret %memtmp, %llvm.dbg.anchor.type* %24, i32 %23) nounwind
  %25 = getelementptr %llvm.dbg.anchor.type* %rmax, i32 0, i32 0 ; <i32*> [#uses=1]
  %26 = getelementptr %llvm.dbg.anchor.type* %memtmp, i32 0, i32 0 ; <i32*> [#uses=1]
  %27 = load i32* %26, align 4                    ; <i32> [#uses=1]
  store i32 %27, i32* %25, align 4
  %28 = getelementptr %llvm.dbg.anchor.type* %rmax, i32 0, i32 1 ; <i32*> [#uses=1]
  %29 = getelementptr %llvm.dbg.anchor.type* %memtmp, i32 0, i32 1 ; <i32*> [#uses=1]
  %30 = load i32* %29, align 4                    ; <i32> [#uses=1]
  store i32 %30, i32* %28, align 4
  call void @llvm.dbg.stoppoint(i32 82, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %31 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([6 x i8]* @.str63, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 83, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @ispisi_razlomke(%llvm.dbg.anchor.type* %rmax, i32 1) nounwind

30
  call void @ispisi_razlomke(%llvm.dbg.anchor.type* %rmax, i32 1) nounwind
  call void @llvm.dbg.stoppoint(i32 85, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 89, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb8

31
  call void @llvm.dbg.stoppoint(i32 89, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %33, i32* %retval, align 4
  br label %return

32
  %retval9 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 89, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram48 to { }*))
  ret i32 %retval9
