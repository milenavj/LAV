
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %k = alloca i32                                 ; <i32*> [#uses=6]
  %j = alloca i32                                 ; <i32*> [#uses=23]
  %i = alloca i32                                 ; <i32*> [#uses=20]
  %n = alloca i32                                 ; <i32*> [#uses=10]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %k to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  %4 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str12, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %7 = and i32 %6, 1                              ; <i32> [#uses=1]
  %8 = icmp eq i32 %7, 0                          ; <i1> [#uses=1]
  br i1 %8, label %bb, label %bb1

2
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str13, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  br label %bb33

3
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb3

4
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %12 = add i32 %11, 1                            ; <i32> [#uses=1]
  store i32 %12, i32* %i, align 4
  br label %bb3

5
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = icmp slt i32 %14, %13                     ; <i1> [#uses=1]
  br i1 %15, label %bb2, label %bb4

6
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %i, align 4
  br label %bb31

7
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %18 = sdiv i32 %17, 2                           ; <i32> [#uses=1]
  %19 = add i32 %18, 1                            ; <i32> [#uses=1]
  %20 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %21 = icmp sgt i32 %19, %20                     ; <i1> [#uses=1]
  br i1 %21, label %bb6, label %bb18

8
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %23 = icmp sgt i32 %22, 0                       ; <i1> [#uses=1]
  br i1 %23, label %bb7, label %bb10

9
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb9

10
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %24 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %26 = add i32 %25, 1                            ; <i32> [#uses=1]
  store i32 %26, i32* %j, align 4
  br label %bb9

11
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %27 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %28 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %29 = icmp slt i32 %27, %28                     ; <i1> [#uses=1]
  br i1 %29, label %bb8, label %bb10

12
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb12

13
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %30 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %31 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %32 = add i32 %31, 1                            ; <i32> [#uses=1]
  store i32 %32, i32* %j, align 4
  br label %bb12

14
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %34 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %35 = mul i32 %34, 2                            ; <i32> [#uses=1]
  %36 = sub i32 %33, %35                          ; <i32> [#uses=1]
  %37 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %38 = icmp sgt i32 %36, %37                     ; <i1> [#uses=1]
  br i1 %38, label %bb11, label %bb13

15
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %39 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %40 = icmp sgt i32 %39, 0                       ; <i1> [#uses=1]
  br i1 %40, label %bb14, label %bb17

16
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb16

17
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %41 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %42 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %43 = add i32 %42, 1                            ; <i32> [#uses=1]
  store i32 %43, i32* %j, align 4
  br label %bb16

18
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %44 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %45 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %46 = icmp slt i32 %44, %45                     ; <i1> [#uses=1]
  br i1 %46, label %bb15, label %bb17

19
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %47 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  br label %bb30

20
  call void @llvm.dbg.stoppoint(i32 31, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %48 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %49 = icmp sgt i32 %48, 0                       ; <i1> [#uses=1]
  br i1 %49, label %bb19, label %bb22

21
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb21

22
  call void @llvm.dbg.stoppoint(i32 33, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %50 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %51 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %52 = add i32 %51, 1                            ; <i32> [#uses=1]
  store i32 %52, i32* %j, align 4
  br label %bb21

23
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %53 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %54 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %55 = sub i32 %53, %54                          ; <i32> [#uses=1]
  %56 = sub i32 %55, 1                            ; <i32> [#uses=1]
  %57 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %58 = icmp sgt i32 %56, %57                     ; <i1> [#uses=1]
  br i1 %58, label %bb20, label %bb22

24
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %k, align 4
  br label %bb24

25
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %59 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %60 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %61 = add i32 %60, 1                            ; <i32> [#uses=1]
  store i32 %61, i32* %k, align 4
  br label %bb24

26
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %62 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %63 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %64 = mul i32 %63, 2                            ; <i32> [#uses=1]
  %65 = sub i32 %62, %64                          ; <i32> [#uses=1]
  %66 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %67 = icmp sgt i32 %65, %66                     ; <i1> [#uses=1]
  br i1 %67, label %bb23, label %bb25

27
  call void @llvm.dbg.stoppoint(i32 36, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %68 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %69 = icmp sgt i32 %68, 0                       ; <i1> [#uses=1]
  br i1 %69, label %bb26, label %bb29

28
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb28

29
  call void @llvm.dbg.stoppoint(i32 38, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %70 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %71 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %72 = add i32 %71, 1                            ; <i32> [#uses=1]
  store i32 %72, i32* %j, align 4
  br label %bb28

30
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %73 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %74 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %75 = sub i32 %73, %74                          ; <i32> [#uses=1]
  %76 = sub i32 %75, 1                            ; <i32> [#uses=1]
  %77 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %78 = icmp sgt i32 %76, %77                     ; <i1> [#uses=1]
  br i1 %78, label %bb27, label %bb29

31
  call void @llvm.dbg.stoppoint(i32 39, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %79 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  br label %bb30

32
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %80 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %81 = add i32 %80, 1                            ; <i32> [#uses=1]
  store i32 %81, i32* %i, align 4
  br label %bb31

33
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %82 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %83 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %84 = icmp slt i32 %83, %82                     ; <i1> [#uses=1]
  br i1 %84, label %bb5, label %bb32

34
  call void @llvm.dbg.stoppoint(i32 41, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %85 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  br label %bb33

35
  call void @llvm.dbg.stoppoint(i32 43, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %86 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %86, i32* %retval, align 4
  br label %return

36
  %retval34 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 43, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval34
