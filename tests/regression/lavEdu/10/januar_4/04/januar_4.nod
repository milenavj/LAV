
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %j = alloca i32                                 ; <i32*> [#uses=9]
  %i = alloca i32                                 ; <i32*> [#uses=9]
  %n = alloca i32                                 ; <i32*> [#uses=10]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %4 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str10, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %6 = icmp sle i32 %5, 0                         ; <i1> [#uses=1]
  br i1 %6, label %bb1, label %bb

2
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %8 = and i32 %7, 1                              ; <i32> [#uses=1]
  %9 = icmp eq i32 %8, 0                          ; <i1> [#uses=1]
  br i1 %9, label %bb1, label %bb2

3
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str11, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb15

4
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb13

5
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb11

6
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %12 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %13 = icmp sgt i32 %11, %12                     ; <i1> [#uses=1]
  br i1 %13, label %bb6, label %bb5

7
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %16 = add i32 %14, %15                          ; <i32> [#uses=1]
  %17 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %18 = icmp slt i32 %16, %17                     ; <i1> [#uses=1]
  br i1 %18, label %bb8, label %bb6

8
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %20 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %21 = sub i32 %19, %20                          ; <i32> [#uses=1]
  %22 = sub i32 %21, 1                            ; <i32> [#uses=1]
  %23 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %24 = icmp sgt i32 %22, %23                     ; <i1> [#uses=1]
  br i1 %24, label %bb9, label %bb7

9
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %26 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %27 = sub i32 %25, %26                          ; <i32> [#uses=1]
  %28 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %29 = add i32 %27, %28                          ; <i32> [#uses=1]
  %30 = sub i32 %29, 1                            ; <i32> [#uses=1]
  %31 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %32 = icmp slt i32 %30, %31                     ; <i1> [#uses=1]
  br i1 %32, label %bb8, label %bb9

10
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  br label %bb10

11
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %34 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  br label %bb10

12
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %35 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %36 = add i32 %35, 1                            ; <i32> [#uses=1]
  store i32 %36, i32* %j, align 4
  br label %bb11

13
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %37 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %38 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %39 = icmp slt i32 %38, %37                     ; <i1> [#uses=1]
  br i1 %39, label %bb4, label %bb12

14
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %40 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %41 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %42 = add i32 %41, 1                            ; <i32> [#uses=1]
  store i32 %42, i32* %i, align 4
  br label %bb13

15
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %43 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %44 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %45 = icmp slt i32 %44, %43                     ; <i1> [#uses=1]
  br i1 %45, label %bb3, label %bb14

16
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb15

17
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %46 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %46, i32* %retval, align 4
  br label %return

18
  %retval16 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval16
