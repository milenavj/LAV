
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %g = alloca i32                                 ; <i32*> [#uses=9]
  %k = alloca i32                                 ; <i32*> [#uses=9]
  %j = alloca i32                                 ; <i32*> [#uses=9]
  %i = alloca i32                                 ; <i32*> [#uses=15]
  %n = alloca i32                                 ; <i32*> [#uses=9]
  %0 = alloca i32                                 ; <i32*> [#uses=4]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %g to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %k to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  %4 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %5 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str14, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %8 = icmp sle i32 %7, 0                         ; <i1> [#uses=1]
  br i1 %8, label %bb, label %bb1

2
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str15, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb28

3
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %11 = and i32 %10, 1                            ; <i32> [#uses=1]
  %12 = icmp eq i32 %11, 0                        ; <i1> [#uses=1]
  br i1 %12, label %bb2, label %bb3

4
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str15, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb28

5
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb14

6
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb6

7
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %16 = add i32 %15, 1                            ; <i32> [#uses=1]
  store i32 %16, i32* %j, align 4
  br label %bb6

8
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %18 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %19 = icmp slt i32 %17, %18                     ; <i1> [#uses=1]
  br i1 %19, label %bb5, label %bb7

9
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %k, align 4
  br label %bb9

10
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %22 = add i32 %21, 1                            ; <i32> [#uses=1]
  store i32 %22, i32* %k, align 4
  br label %bb9

11
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %23 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %24 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %25 = mul i32 %24, 2                            ; <i32> [#uses=1]
  %26 = sub i32 %23, %25                          ; <i32> [#uses=1]
  %27 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %28 = icmp sgt i32 %26, %27                     ; <i1> [#uses=1]
  br i1 %28, label %bb8, label %bb10

12
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %g, align 4
  br label %bb12

13
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %29 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %30 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %31 = add i32 %30, 1                            ; <i32> [#uses=1]
  store i32 %31, i32* %g, align 4
  br label %bb12

14
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %33 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %34 = icmp slt i32 %32, %33                     ; <i1> [#uses=1]
  br i1 %34, label %bb11, label %bb13

15
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %35 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %37 = add i32 %36, 1                            ; <i32> [#uses=1]
  store i32 %37, i32* %i, align 4
  br label %bb14

16
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %38 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %39 = sub i32 %38, 1                            ; <i32> [#uses=1]
  %40 = sdiv i32 %39, 2                           ; <i32> [#uses=1]
  %41 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %42 = icmp sgt i32 %40, %41                     ; <i1> [#uses=1]
  br i1 %42, label %bb4, label %bb15

17
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %i, align 4
  br label %bb26

18
  call void @llvm.dbg.stoppoint(i32 31, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb18

19
  call void @llvm.dbg.stoppoint(i32 32, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %43 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 31, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %44 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %45 = add i32 %44, 1                            ; <i32> [#uses=1]
  store i32 %45, i32* %j, align 4
  br label %bb18

20
  call void @llvm.dbg.stoppoint(i32 31, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %46 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %47 = sdiv i32 %46, 2                           ; <i32> [#uses=1]
  %48 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %49 = sub i32 %47, %48                          ; <i32> [#uses=1]
  %50 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %51 = icmp sge i32 %49, %50                     ; <i1> [#uses=1]
  br i1 %51, label %bb17, label %bb19

21
  call void @llvm.dbg.stoppoint(i32 33, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %k, align 4
  br label %bb21

22
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %52 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 33, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %53 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %54 = add i32 %53, 1                            ; <i32> [#uses=1]
  store i32 %54, i32* %k, align 4
  br label %bb21

23
  call void @llvm.dbg.stoppoint(i32 33, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %55 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %56 = mul i32 %55, 2                            ; <i32> [#uses=1]
  %57 = sub i32 %56, 1                            ; <i32> [#uses=1]
  %58 = load i32* %k, align 4                     ; <i32> [#uses=1]
  %59 = icmp sgt i32 %57, %58                     ; <i1> [#uses=1]
  br i1 %59, label %bb20, label %bb22

24
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %g, align 4
  br label %bb24

25
  call void @llvm.dbg.stoppoint(i32 36, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %60 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %61 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %62 = add i32 %61, 1                            ; <i32> [#uses=1]
  store i32 %62, i32* %g, align 4
  br label %bb24

26
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %63 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %64 = sdiv i32 %63, 2                           ; <i32> [#uses=1]
  %65 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %66 = sub i32 %64, %65                          ; <i32> [#uses=1]
  %67 = load i32* %g, align 4                     ; <i32> [#uses=1]
  %68 = icmp sge i32 %66, %67                     ; <i1> [#uses=1]
  br i1 %68, label %bb23, label %bb25

27
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %69 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %70 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %71 = add i32 %70, 1                            ; <i32> [#uses=1]
  store i32 %71, i32* %i, align 4
  br label %bb26

28
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %72 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %73 = add i32 %72, 3                            ; <i32> [#uses=1]
  %74 = sdiv i32 %73, 2                           ; <i32> [#uses=1]
  %75 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %76 = icmp sgt i32 %74, %75                     ; <i1> [#uses=1]
  br i1 %76, label %bb16, label %bb27

29
  call void @llvm.dbg.stoppoint(i32 39, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb28

30
  call void @llvm.dbg.stoppoint(i32 39, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %77 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %77, i32* %retval, align 4
  br label %return

31
  %retval29 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 39, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval29
