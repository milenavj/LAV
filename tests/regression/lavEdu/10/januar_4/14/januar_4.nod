
1
  %i_addr = alloca i32                            ; <i32*> [#uses=3]
  %j_addr = alloca i32                            ; <i32*> [#uses=3]
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %i_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store i32 %i, i32* %i_addr
  %2 = bitcast i32* %j_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  store i32 %j, i32* %j_addr
  call void @llvm.dbg.stoppoint(i32 5, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %3 = load i32* %j_addr, align 4                 ; <i32> [#uses=2]
  %4 = load i32* %i_addr, align 4                 ; <i32> [#uses=2]
  %5 = icmp sle i32 %3, %4                        ; <i1> [#uses=1]
  %min = select i1 %5, i32 %3, i32 %4             ; <i32> [#uses=1]
  store i32 %min, i32* %0, align 4
  %6 = load i32* %0, align 4                      ; <i32> [#uses=1]
  store i32 %6, i32* %retval, align 4
  br label %return

2
  %retval1 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 5, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval1

3
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %m = alloca i32                                 ; <i32*> [#uses=4]
  %j = alloca i32                                 ; <i32*> [#uses=11]
  %i = alloca i32                                 ; <i32*> [#uses=7]
  %n = alloca i32                                 ; <i32*> [#uses=8]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram11 to { }*))
  %1 = bitcast i32* %m to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  %2 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable14 to { }*))
  %3 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable15 to { }*))
  %4 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable17 to { }*))
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str18, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %7 = icmp slt i32 %6, 0                         ; <i1> [#uses=1]
  br i1 %7, label %bb1, label %bb

4
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %9 = and i32 %8, 1                              ; <i32> [#uses=1]
  %10 = icmp eq i32 %9, 0                         ; <i1> [#uses=1]
  br i1 %10, label %bb1, label %bb2

5
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str19, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %0, align 4
  br label %bb15

6
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb13

7
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %13 = sub i32 %12, 1                            ; <i32> [#uses=1]
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = sub i32 %13, %14                          ; <i32> [#uses=1]
  %16 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %17 = call i32 @min(i32 %16, i32 %15) nounwind  ; <i32> [#uses=1]

8
  %17 = call i32 @min(i32 %16, i32 %15) nounwind  ; <i32> [#uses=1]
  store i32 %17, i32* %m, align 4
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb5

9
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %18 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %20 = add i32 %19, 1                            ; <i32> [#uses=1]
  store i32 %20, i32* %j, align 4
  br label %bb5

10
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %22 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %23 = icmp slt i32 %21, %22                     ; <i1> [#uses=1]
  br i1 %23, label %bb4, label %bb6

11
  br label %bb8

12
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %24 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %26 = add i32 %25, 1                            ; <i32> [#uses=1]
  store i32 %26, i32* %j, align 4
  br label %bb8

13
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %27 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %28 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %29 = sub i32 %27, %28                          ; <i32> [#uses=1]
  %30 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %31 = icmp sgt i32 %29, %30                     ; <i1> [#uses=1]
  br i1 %31, label %bb7, label %bb9

14
  br label %bb11

15
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %34 = add i32 %33, 1                            ; <i32> [#uses=1]
  store i32 %34, i32* %j, align 4
  br label %bb11

16
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %35 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %36 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %37 = icmp slt i32 %36, %35                     ; <i1> [#uses=1]
  br i1 %37, label %bb10, label %bb12

17
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %38 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %39 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %40 = add i32 %39, 1                            ; <i32> [#uses=1]
  store i32 %40, i32* %i, align 4
  br label %bb13

18
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %41 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %42 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %43 = icmp slt i32 %42, %41                     ; <i1> [#uses=1]
  br i1 %43, label %bb3, label %bb14

19
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb15

20
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %44 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %44, i32* %retval, align 4
  br label %return

21
  %retval16 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram11 to { }*))
  ret i32 %retval16
