
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %korak = alloca i32                             ; <i32*> [#uses=4]
  %j = alloca i32                                 ; <i32*> [#uses=8]
  %i = alloca i32                                 ; <i32*> [#uses=8]
  %n = alloca i32                                 ; <i32*> [#uses=8]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %korak to { }*                ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  %3 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %4 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %korak, align 4
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str14, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %7 = and i32 %6, 1                              ; <i32> [#uses=1]
  %8 = icmp eq i32 %7, 0                          ; <i1> [#uses=1]
  br i1 %8, label %bb, label %bb1

2
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = call i32 @putchar(i32 42) nounwind         ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb15

3
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb13

4
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb11

5
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %11 = udiv i32 %10, 2                           ; <i32> [#uses=1]
  %12 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %13 = icmp ne i32 %11, %12                      ; <i1> [#uses=1]
  br i1 %13, label %bb6, label %bb4

6
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %15 = udiv i32 %14, 2                           ; <i32> [#uses=1]
  %16 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %17 = icmp ne i32 %15, %16                      ; <i1> [#uses=1]
  br i1 %17, label %bb6, label %bb5

7
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 -1, i32* %korak, align 4
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %18 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  br label %bb10

8
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %20 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %21 = icmp ult i32 %19, %20                     ; <i1> [#uses=1]
  br i1 %21, label %bb8, label %bb7

9
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %23 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %24 = sub i32 %22, %23                          ; <i32> [#uses=1]
  %25 = sub i32 %24, 1                            ; <i32> [#uses=1]
  %26 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %27 = icmp ult i32 %25, %26                     ; <i1> [#uses=1]
  br i1 %27, label %bb8, label %bb9

10
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %28 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  br label %bb10

11
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %29 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  br label %bb10

12
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %30 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %31 = add i32 %30, 1                            ; <i32> [#uses=1]
  store i32 %31, i32* %i, align 4
  br label %bb11

13
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %32 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %33 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %34 = icmp ult i32 %33, %32                     ; <i1> [#uses=1]
  br i1 %34, label %bb3, label %bb12

14
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %35 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %37 = load i32* %korak, align 4                 ; <i32> [#uses=1]
  %38 = add i32 %36, %37                          ; <i32> [#uses=1]
  store i32 %38, i32* %j, align 4
  br label %bb13

15
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %39 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %40 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %41 = icmp ult i32 %40, %39                     ; <i1> [#uses=1]
  br i1 %41, label %bb2, label %bb14

16
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb15

17
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %42 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %42, i32* %retval, align 4
  br label %return

18
  %retval16 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 29, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval16
