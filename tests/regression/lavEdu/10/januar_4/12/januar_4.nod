
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %s = alloca i32                                 ; <i32*> [#uses=3]
  %m = alloca i32                                 ; <i32*> [#uses=10]
  %j = alloca i32                                 ; <i32*> [#uses=1]
  %i = alloca i32                                 ; <i32*> [#uses=25]
  %n = alloca i32                                 ; <i32*> [#uses=12]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast i32* %s to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast i32* %m to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable7 to { }*))
  %3 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  %4 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %5 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  call void @llvm.dbg.stoppoint(i32 4, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %m, align 4
  call void @llvm.dbg.stoppoint(i32 5, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = call i32 @puts(i8* getelementptr ([21 x i8]* @.str14, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str15, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = load i32* %n, align 4                      ; <i32> [#uses=1]
  store i32 %8, i32* %s, align 4
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %10 = and i32 %9, 1                             ; <i32> [#uses=1]
  %11 = icmp eq i32 %10, 0                        ; <i1> [#uses=1]
  br i1 %11, label %bb, label %bb1

2
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = call i32 @puts(i8* getelementptr ([2 x i8]* @.str16, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb26

3
  br label %bb12

4
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb4

5
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = add i32 %14, 1                            ; <i32> [#uses=1]
  store i32 %15, i32* %i, align 4
  br label %bb4

6
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %17 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %18 = icmp slt i32 %16, %17                     ; <i1> [#uses=1]
  br i1 %18, label %bb3, label %bb5

7
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb7

8
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  %20 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %21 = add i32 %20, 1                            ; <i32> [#uses=1]
  store i32 %21, i32* %i, align 4
  br label %bb7

9
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %23 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %24 = icmp slt i32 %23, %22                     ; <i1> [#uses=1]
  br i1 %24, label %bb6, label %bb8

10
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb10

11
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  %26 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %27 = add i32 %26, 1                            ; <i32> [#uses=1]
  store i32 %27, i32* %i, align 4
  br label %bb10

12
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %28 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %29 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %30 = icmp slt i32 %28, %29                     ; <i1> [#uses=1]
  br i1 %30, label %bb9, label %bb11

13
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %31 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %32 = sub i32 %31, 2                            ; <i32> [#uses=1]
  store i32 %32, i32* %n, align 4
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %34 = add i32 %33, 1                            ; <i32> [#uses=1]
  store i32 %34, i32* %m, align 4
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %35 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  br label %bb12

14
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %37 = icmp sgt i32 %36, 1                       ; <i1> [#uses=1]
  br i1 %37, label %bb2, label %bb13

15
  br label %bb24

16
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb16

17
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %38 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  %39 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %40 = add i32 %39, 1                            ; <i32> [#uses=1]
  store i32 %40, i32* %i, align 4
  br label %bb16

18
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %41 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %42 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %43 = icmp slt i32 %41, %42                     ; <i1> [#uses=1]
  br i1 %43, label %bb15, label %bb17

19
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb19

20
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %44 = call i32 @putchar(i32 120) nounwind       ; <i32> [#uses=0]
  %45 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %46 = add i32 %45, 1                            ; <i32> [#uses=1]
  store i32 %46, i32* %i, align 4
  br label %bb19

21
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %47 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %48 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %49 = icmp slt i32 %48, %47                     ; <i1> [#uses=1]
  br i1 %49, label %bb18, label %bb20

22
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb22

23
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %50 = call i32 @putchar(i32 46) nounwind        ; <i32> [#uses=0]
  %51 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %52 = add i32 %51, 1                            ; <i32> [#uses=1]
  store i32 %52, i32* %i, align 4
  br label %bb22

24
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %53 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %54 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %55 = icmp slt i32 %53, %54                     ; <i1> [#uses=1]
  br i1 %55, label %bb21, label %bb23

25
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %56 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %57 = add i32 %56, 2                            ; <i32> [#uses=1]
  store i32 %57, i32* %n, align 4
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %58 = load i32* %m, align 4                     ; <i32> [#uses=1]
  %59 = sub i32 %58, 1                            ; <i32> [#uses=1]
  store i32 %59, i32* %m, align 4
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %60 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  br label %bb24

26
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %61 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %62 = load i32* %s, align 4                     ; <i32> [#uses=1]
  %63 = icmp sle i32 %61, %62                     ; <i1> [#uses=1]
  br i1 %63, label %bb14, label %bb25

27
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb26

28
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %64 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %64, i32* %retval, align 4
  br label %return

29
  %retval27 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval27
