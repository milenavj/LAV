
1
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %c = alloca double, align 8                     ; <double*> [#uses=11]
  %b = alloca double, align 8                     ; <double*> [#uses=4]
  %a = alloca double, align 8                     ; <double*> [#uses=14]
  %i = alloca i32                                 ; <i32*> [#uses=1]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast double* %c to { }*                 ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  %2 = bitcast double* %b to { }*                 ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  %3 = bitcast double* %a to { }*                 ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %4 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([7 x i8]* @.str14, i32 0, i32 0), double* %a, double* %b) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load double* %a, align 8                   ; <double> [#uses=1]
  %7 = load double* %b, align 8                   ; <double> [#uses=1]
  %8 = fcmp olt double %6, %7                     ; <i1> [#uses=1]
  br i1 %8, label %bb, label %bb1

2
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load double* %b, align 8                   ; <double> [#uses=1]
  %10 = load double* %a, align 8                  ; <double> [#uses=1]
  %11 = fsub double %9, %10                       ; <double> [#uses=1]
  %12 = fdiv double %11, 9.000000e+00             ; <double> [#uses=1]
  store double %12, double* %c, align 8
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = load double* %c, align 8                  ; <double> [#uses=1]
  %14 = fmul double %13, 9.000000e+00             ; <double> [#uses=1]
  %15 = load double* %a, align 8                  ; <double> [#uses=1]
  %16 = fadd double %14, %15                      ; <double> [#uses=1]
  %17 = call double @cos(double %16) nounwind readonly ; <double> [#uses=1]
  %18 = load double* %c, align 8                  ; <double> [#uses=1]
  %19 = fmul double %18, 8.000000e+00             ; <double> [#uses=1]
  %20 = load double* %a, align 8                  ; <double> [#uses=1]
  %21 = fadd double %19, %20                      ; <double> [#uses=1]
  %22 = call double @cos(double %21) nounwind readonly ; <double> [#uses=1]
  %23 = load double* %c, align 8                  ; <double> [#uses=1]
  %24 = fmul double %23, 7.000000e+00             ; <double> [#uses=1]
  %25 = load double* %a, align 8                  ; <double> [#uses=1]
  %26 = fadd double %24, %25                      ; <double> [#uses=1]
  %27 = call double @cos(double %26) nounwind readonly ; <double> [#uses=1]
  %28 = load double* %c, align 8                  ; <double> [#uses=1]
  %29 = fmul double %28, 6.000000e+00             ; <double> [#uses=1]
  %30 = load double* %a, align 8                  ; <double> [#uses=1]
  %31 = fadd double %29, %30                      ; <double> [#uses=1]
  %32 = call double @cos(double %31) nounwind readonly ; <double> [#uses=1]
  %33 = load double* %c, align 8                  ; <double> [#uses=1]
  %34 = fmul double %33, 5.000000e+00             ; <double> [#uses=1]
  %35 = load double* %a, align 8                  ; <double> [#uses=1]
  %36 = fadd double %34, %35                      ; <double> [#uses=1]
  %37 = call double @cos(double %36) nounwind readonly ; <double> [#uses=1]
  %38 = load double* %c, align 8                  ; <double> [#uses=1]
  %39 = fmul double %38, 4.000000e+00             ; <double> [#uses=1]
  %40 = load double* %a, align 8                  ; <double> [#uses=1]
  %41 = fadd double %39, %40                      ; <double> [#uses=1]
  %42 = call double @cos(double %41) nounwind readonly ; <double> [#uses=1]
  %43 = load double* %c, align 8                  ; <double> [#uses=1]
  %44 = fmul double %43, 3.000000e+00             ; <double> [#uses=1]
  %45 = load double* %a, align 8                  ; <double> [#uses=1]
  %46 = fadd double %44, %45                      ; <double> [#uses=1]
  %47 = call double @cos(double %46) nounwind readonly ; <double> [#uses=1]
  %48 = load double* %c, align 8                  ; <double> [#uses=1]
  %49 = fmul double %48, 2.000000e+00             ; <double> [#uses=1]
  %50 = load double* %a, align 8                  ; <double> [#uses=1]
  %51 = fadd double %49, %50                      ; <double> [#uses=1]
  %52 = call double @cos(double %51) nounwind readonly ; <double> [#uses=1]
  %53 = load double* %a, align 8                  ; <double> [#uses=1]
  %54 = load double* %c, align 8                  ; <double> [#uses=1]
  %55 = fadd double %53, %54                      ; <double> [#uses=1]
  %56 = call double @cos(double %55) nounwind readonly ; <double> [#uses=1]
  %57 = load double* %a, align 8                  ; <double> [#uses=1]
  %58 = call double @cos(double %57) nounwind readonly ; <double> [#uses=1]
  %59 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([61 x i8]* @.str15, i32 0, i32 0), double %58, double %56, double %52, double %47, double %42, double %37, double %32, double %27, double %22, double %17) nounwind ; <i32> [#uses=0]
  br label %bb2

3
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %60 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([4 x i8]* @.str16, i32 0, i32 0), i32 -1) nounwind ; <i32> [#uses=0]
  br label %bb2

4
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  %61 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %61, i32* %retval, align 4
  br label %return

5
  %retval3 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret i32 %retval3
