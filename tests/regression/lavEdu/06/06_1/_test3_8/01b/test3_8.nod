
1
  %a_addr = alloca [10 x float]*                  ; <[10 x float]**> [#uses=3]
  %n_addr = alloca i32                            ; <i32*> [#uses=5]
  %sum_addr = alloca float*                       ; <float**> [#uses=4]
  %j = alloca i32                                 ; <i32*> [#uses=7]
  %i = alloca i32                                 ; <i32*> [#uses=7]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %0 = bitcast [10 x float]** %a_addr to { }*     ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store [10 x float]* %a, [10 x float]** %a_addr
  %1 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable12 to { }*))
  store i32 %n, i32* %n_addr
  %2 = bitcast float** %sum_addr to { }*          ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable14 to { }*))
  store float* %sum, float** %sum_addr
  %3 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable16 to { }*))
  %4 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable18 to { }*))
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb6

2
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb4

3
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = load i32* %j, align 4                      ; <i32> [#uses=1]
  %6 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %7 = add i32 %5, %6                             ; <i32> [#uses=1]
  %8 = load i32* %n_addr, align 4                 ; <i32> [#uses=1]
  %9 = sub i32 %8, 1                              ; <i32> [#uses=1]
  %10 = icmp sgt i32 %7, %9                       ; <i1> [#uses=1]
  br i1 %10, label %bb2, label %bb3

4
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = load float** %sum_addr, align 4           ; <float*> [#uses=1]
  %12 = load float* %11, align 4                  ; <float> [#uses=1]
  %13 = load [10 x float]** %a_addr, align 4      ; <[10 x float]*> [#uses=1]
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = getelementptr [10 x float]* %13, i32 %14  ; <[10 x float]*> [#uses=1]
  %16 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %17 = getelementptr [10 x float]* %15, i32 0, i32 %16 ; <float*> [#uses=1]
  %18 = load float* %17, align 4                  ; <float> [#uses=1]
  %19 = fadd float %12, %18                       ; <float> [#uses=1]
  %20 = load float** %sum_addr, align 4           ; <float*> [#uses=1]
  store float %19, float* %20, align 4
  br label %bb3

5
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %22 = add i32 %21, 1                            ; <i32> [#uses=1]
  store i32 %22, i32* %j, align 4
  br label %bb4

6
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %23 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %24 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %25 = icmp slt i32 %23, %24                     ; <i1> [#uses=1]
  br i1 %25, label %bb1, label %bb5

7
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %27 = add i32 %26, 1                            ; <i32> [#uses=1]
  store i32 %27, i32* %i, align 4
  br label %bb6

8
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %28 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %29 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %30 = icmp slt i32 %28, %29                     ; <i1> [#uses=1]
  br i1 %30, label %bb, label %bb7

9
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  br label %return

10
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret void

11
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %n = alloca i32                                 ; <i32*> [#uses=7]
  %j = alloca i32                                 ; <i32*> [#uses=6]
  %i = alloca i32                                 ; <i32*> [#uses=6]
  %a = alloca [10 x [10 x float]]                 ; <[10 x [10 x float]]*> [#uses=3]
  %sum = alloca float                             ; <float*> [#uses=4]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram22 to { }*))
  %1 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable23 to { }*))
  %2 = bitcast i32* %j to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable24 to { }*))
  %3 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable25 to { }*))
  %4 = bitcast [10 x [10 x float]]* %a to { }*    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable28 to { }*))
  %5 = bitcast float* %sum to { }*                ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable29 to { }*))
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store float 0.000000e+00, float* %sum, align 4
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = call i32 @puts(i8* getelementptr ([16 x i8]* @.str30, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str31, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %9 = icmp sle i32 %8, 0                         ; <i1> [#uses=1]
  br i1 %9, label %bb1, label %bb

12
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %11 = icmp sgt i32 %10, 10                      ; <i1> [#uses=1]
  br i1 %11, label %bb1, label %bb2

13
  call void @llvm.dbg.stoppoint(i32 18, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = call i32 @puts(i8* getelementptr ([3 x i8]* @.str32, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  store i32 0, i32* %0, align 4
  br label %bb10

14
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = call i32 @puts(i8* getelementptr ([15 x i8]* @.str33, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb7

15
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %j, align 4
  br label %bb5

16
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %16 = getelementptr [10 x [10 x float]]* %a, i32 0, i32 %14 ; <[10 x float]*> [#uses=1]
  %17 = getelementptr [10 x float]* %16, i32 0, i32 %15 ; <float*> [#uses=1]
  %18 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str34, i32 0, i32 0), float* %17) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %20 = add i32 %19, 1                            ; <i32> [#uses=1]
  store i32 %20, i32* %j, align 4
  br label %bb5

17
  call void @llvm.dbg.stoppoint(i32 21, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %21 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %22 = load i32* %j, align 4                     ; <i32> [#uses=1]
  %23 = icmp slt i32 %22, %21                     ; <i1> [#uses=1]
  br i1 %23, label %bb4, label %bb6

18
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %24 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %25 = add i32 %24, 1                            ; <i32> [#uses=1]
  store i32 %25, i32* %i, align 4
  br label %bb7

19
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %27 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %28 = icmp slt i32 %27, %26                     ; <i1> [#uses=1]
  br i1 %28, label %bb3, label %bb8

20
  call void @llvm.dbg.stoppoint(i32 23, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %29 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %a9 = bitcast [10 x [10 x float]]* %a to [10 x float]* ; <[10 x float]*> [#uses=1]
  call void @zbir([10 x float]* %a9, i32 %29, float* %sum) nounwind

21
  call void @zbir([10 x float]* %a9, i32 %29, float* %sum) nounwind
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %30 = load float* %sum, align 4                 ; <float> [#uses=1]
  %31 = fpext float %30 to double                 ; <double> [#uses=1]
  %32 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([6 x i8]* @.str35, i32 0, i32 0), double %31) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb10

22
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %33 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %33, i32* %retval, align 4
  br label %return

23
  %retval11 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram22 to { }*))
  ret i32 %retval11
