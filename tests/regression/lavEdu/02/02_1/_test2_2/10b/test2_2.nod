
1
  %niz_addr = alloca float*                       ; <float**> [#uses=3]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %i = alloca i32                                 ; <i32*> [#uses=6]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %0 = bitcast float** %niz_addr to { }*          ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %0, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store float* %niz, float** %niz_addr
  %1 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  store i32 %n, i32* %n_addr
  %2 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %3 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([11 x i8]* @.str12, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb1

2
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %4 = load float** %niz_addr, align 4            ; <float*> [#uses=1]
  %5 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %6 = getelementptr float* %4, i32 %5            ; <float*> [#uses=1]
  %7 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str13, i32 0, i32 0), float* %6) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %9 = add i32 %8, 1                              ; <i32> [#uses=1]
  store i32 %9, i32* %i, align 4
  br label %bb1

3
  call void @llvm.dbg.stoppoint(i32 7, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %11 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %12 = icmp slt i32 %10, %11                     ; <i1> [#uses=1]
  br i1 %12, label %bb, label %bb2

4
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  br label %return

5
  call void @llvm.dbg.stoppoint(i32 9, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret void

6
  %niz_addr = alloca float*                       ; <float**> [#uses=5]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %max = alloca float                             ; <float*> [#uses=4]
  %max_i = alloca i32                             ; <i32*> [#uses=4]
  %i = alloca i32                                 ; <i32*> [#uses=8]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram17 to { }*))
  %1 = bitcast float** %niz_addr to { }*          ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable18 to { }*))
  store float* %niz, float** %niz_addr
  %2 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable19 to { }*))
  store i32 %n, i32* %n_addr
  %3 = bitcast float* %max to { }*                ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable21 to { }*))
  %4 = bitcast i32* %max_i to { }*                ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable23 to { }*))
  %5 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable24 to { }*))
  call void @llvm.dbg.stoppoint(i32 11, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %max_i, align 4
  call void @llvm.dbg.stoppoint(i32 13, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load float** %niz_addr, align 4            ; <float*> [#uses=1]
  %7 = getelementptr float* %6, i32 0             ; <float*> [#uses=1]
  %8 = load float* %7, align 1                    ; <float> [#uses=1]
  store float %8, float* %max, align 4
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %i, align 4
  br label %bb3

7
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load float** %niz_addr, align 4            ; <float*> [#uses=1]
  %10 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %11 = getelementptr float* %9, i32 %10          ; <float*> [#uses=1]
  %12 = load float* %11, align 1                  ; <float> [#uses=1]
  %13 = load float* %max, align 4                 ; <float> [#uses=1]
  %14 = fcmp oge float %12, %13                   ; <i1> [#uses=1]
  br i1 %14, label %bb1, label %bb2

8
  call void @llvm.dbg.stoppoint(i32 16, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load float** %niz_addr, align 4           ; <float*> [#uses=1]
  %16 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %17 = getelementptr float* %15, i32 %16         ; <float*> [#uses=1]
  %18 = load float* %17, align 1                  ; <float> [#uses=1]
  store float %18, float* %max, align 4
  call void @llvm.dbg.stoppoint(i32 17, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %i, align 4                     ; <i32> [#uses=1]
  store i32 %19, i32* %max_i, align 4
  br label %bb2

9
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %21 = add i32 %20, 1                            ; <i32> [#uses=1]
  store i32 %21, i32* %i, align 4
  br label %bb3

10
  call void @llvm.dbg.stoppoint(i32 14, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %23 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %24 = icmp slt i32 %22, %23                     ; <i1> [#uses=1]
  br i1 %24, label %bb, label %bb4

11
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load i32* %max_i, align 4                 ; <i32> [#uses=1]
  store i32 %25, i32* %0, align 4
  %26 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %26, i32* %retval, align 4
  br label %return

12
  %retval5 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 19, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram17 to { }*))
  ret i32 %retval5

13
  %niz_addr = alloca float*                       ; <float**> [#uses=5]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %min = alloca float                             ; <float*> [#uses=4]
  %min_i = alloca i32                             ; <i32*> [#uses=4]
  %i = alloca i32                                 ; <i32*> [#uses=8]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram26 to { }*))
  %1 = bitcast float** %niz_addr to { }*          ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable27 to { }*))
  store float* %niz, float** %niz_addr
  %2 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable28 to { }*))
  store i32 %n, i32* %n_addr
  %3 = bitcast float* %min to { }*                ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable30 to { }*))
  %4 = bitcast i32* %min_i to { }*                ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable32 to { }*))
  %5 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable33 to { }*))
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %min_i, align 4
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = load float** %niz_addr, align 4            ; <float*> [#uses=1]
  %7 = getelementptr float* %6, i32 0             ; <float*> [#uses=1]
  %8 = load float* %7, align 1                    ; <float> [#uses=1]
  store float %8, float* %min, align 4
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb3

14
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %9 = load float** %niz_addr, align 4            ; <float*> [#uses=1]
  %10 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %11 = getelementptr float* %9, i32 %10          ; <float*> [#uses=1]
  %12 = load float* %11, align 1                  ; <float> [#uses=1]
  %13 = load float* %min, align 4                 ; <float> [#uses=1]
  %14 = fcmp ole float %12, %13                   ; <i1> [#uses=1]
  br i1 %14, label %bb1, label %bb2

15
  call void @llvm.dbg.stoppoint(i32 27, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load float** %niz_addr, align 4           ; <float*> [#uses=1]
  %16 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %17 = getelementptr float* %15, i32 %16         ; <float*> [#uses=1]
  %18 = load float* %17, align 1                  ; <float> [#uses=1]
  store float %18, float* %min, align 4
  call void @llvm.dbg.stoppoint(i32 28, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %i, align 4                     ; <i32> [#uses=1]
  store i32 %19, i32* %min_i, align 4
  br label %bb2

16
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %21 = add i32 %20, 1                            ; <i32> [#uses=1]
  store i32 %21, i32* %i, align 4
  br label %bb3

17
  call void @llvm.dbg.stoppoint(i32 25, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %23 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %24 = icmp slt i32 %22, %23                     ; <i1> [#uses=1]
  br i1 %24, label %bb, label %bb4

18
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %25 = load i32* %min_i, align 4                 ; <i32> [#uses=1]
  store i32 %25, i32* %0, align 4
  %26 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %26, i32* %retval, align 4
  br label %return

19
  %retval5 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 30, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram26 to { }*))
  ret i32 %retval5

20
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %max = alloca i32                               ; <i32*> [#uses=4]
  %c = alloca i32                                 ; <i32*> [#uses=4]
  %min = alloca i32                               ; <i32*> [#uses=4]
  %n = alloca i32                                 ; <i32*> [#uses=7]
  %niz = alloca [100 x float]                     ; <[100 x float]*> [#uses=4]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram37 to { }*))
  %1 = bitcast i32* %max to { }*                  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable38 to { }*))
  %2 = bitcast i32* %c to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable40 to { }*))
  %3 = bitcast i32* %min to { }*                  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable41 to { }*))
  %4 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable42 to { }*))
  %5 = bitcast [100 x float]* %niz to { }*        ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable45 to { }*))
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([23 x i8]* @.str46, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 36, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str47, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %9 = icmp slt i32 %8, 0                         ; <i1> [#uses=1]
  br i1 %9, label %bb1, label %bb

21
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %11 = icmp sgt i32 %10, 100                     ; <i1> [#uses=1]
  br i1 %11, label %bb1, label %bb2

22
  call void @llvm.dbg.stoppoint(i32 38, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([10 x i8]* @.str48, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 39, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 40, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb9

23
  call void @llvm.dbg.stoppoint(i32 42, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %niz3 = bitcast [100 x float]* %niz to float*   ; <float*> [#uses=1]
  call void @ucitaj(float* %niz3, i32 %14) nounwind

24
  call void @ucitaj(float* %niz3, i32 %14) nounwind
  call void @llvm.dbg.stoppoint(i32 43, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %niz4 = bitcast [100 x float]* %niz to float*   ; <float*> [#uses=1]
  %16 = call i32 @indeks_minimuma(float* %niz4, i32 %15) nounwind ; <i32> [#uses=1]

25
  %16 = call i32 @indeks_minimuma(float* %niz4, i32 %15) nounwind ; <i32> [#uses=1]
  store i32 %16, i32* %min, align 4
  call void @llvm.dbg.stoppoint(i32 44, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %niz5 = bitcast [100 x float]* %niz to float*   ; <float*> [#uses=1]
  %18 = call i32 @indeks_maksimuma(float* %niz5, i32 %17) nounwind ; <i32> [#uses=1]

26
  %18 = call i32 @indeks_maksimuma(float* %niz5, i32 %17) nounwind ; <i32> [#uses=1]
  store i32 %18, i32* %max, align 4
  call void @llvm.dbg.stoppoint(i32 45, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %min, align 4                   ; <i32> [#uses=1]
  %20 = load i32* %max, align 4                   ; <i32> [#uses=1]
  %21 = icmp sgt i32 %19, %20                     ; <i1> [#uses=1]
  br i1 %21, label %bb6, label %bb7

27
  call void @llvm.dbg.stoppoint(i32 46, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 1, i32* %c, align 4
  br label %bb8

28
  call void @llvm.dbg.stoppoint(i32 47, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %c, align 4
  br label %bb8

29
  call void @llvm.dbg.stoppoint(i32 48, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %min, align 4                   ; <i32> [#uses=1]
  %23 = load i32* %max, align 4                   ; <i32> [#uses=1]
  %24 = load i32* %c, align 4                     ; <i32> [#uses=1]
  %25 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([16 x i8]* @.str49, i32 0, i32 0), i32 %22, i32 %23, i32 %24) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 49, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = call i32 @putchar(i32 10) nounwind        ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 50, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb9

30
  call void @llvm.dbg.stoppoint(i32 50, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %27 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %27, i32* %retval, align 4
  br label %return

31
  %retval10 = load i32* %retval                   ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 50, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram37 to { }*))
  ret i32 %retval10
