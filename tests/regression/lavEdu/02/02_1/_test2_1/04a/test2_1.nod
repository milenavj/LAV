
1
  %a_addr = alloca float*                         ; <float**> [#uses=4]
  %n_addr = alloca i32                            ; <i32*> [#uses=3]
  %retval = alloca float                          ; <float*> [#uses=2]
  %i = alloca i32                                 ; <i32*> [#uses=7]
  %max = alloca float                             ; <float*> [#uses=5]
  %0 = alloca float                               ; <float*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  %1 = bitcast float** %a_addr to { }*            ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable to { }*))
  store float* %a, float** %a_addr
  %2 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable9 to { }*))
  store i32 %n, i32* %n_addr
  %3 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable11 to { }*))
  %4 = bitcast float* %max to { }*                ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable13 to { }*))
  call void @llvm.dbg.stoppoint(i32 6, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store float 0.000000e+00, float* %max, align 4
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb3

2
  call void @llvm.dbg.stoppoint(i32 10, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = load float** %a_addr, align 4              ; <float*> [#uses=1]
  %6 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %7 = getelementptr float* %5, i32 %6            ; <float*> [#uses=1]
  %8 = load float* %7, align 1                    ; <float> [#uses=1]
  %9 = load float* %max, align 4                  ; <float> [#uses=1]
  %10 = fcmp ogt float %8, %9                     ; <i1> [#uses=1]
  br i1 %10, label %bb1, label %bb2

3
  call void @llvm.dbg.stoppoint(i32 12, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = load float** %a_addr, align 4             ; <float*> [#uses=1]
  %12 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %13 = getelementptr float* %11, i32 %12         ; <float*> [#uses=1]
  %14 = load float* %13, align 1                  ; <float> [#uses=1]
  store float %14, float* %max, align 4
  br label %bb2

4
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %15 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %16 = add i32 %15, 1                            ; <i32> [#uses=1]
  store i32 %16, i32* %i, align 4
  br label %bb3

5
  call void @llvm.dbg.stoppoint(i32 8, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %18 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %19 = icmp slt i32 %17, %18                     ; <i1> [#uses=1]
  br i1 %19, label %bb, label %bb4

6
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %20 = load float* %max, align 4                 ; <float> [#uses=1]
  store float %20, float* %0, align 4
  %21 = load float* %0, align 4                   ; <float> [#uses=1]
  store float %21, float* %retval, align 4
  br label %return

7
  %retval5 = load float* %retval                  ; <float> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 15, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram to { }*))
  ret float %retval5

8
  %a_addr = alloca float*                         ; <float**> [#uses=3]
  %n_addr = alloca i32                            ; <i32*> [#uses=4]
  %retval = alloca float                          ; <float*> [#uses=2]
  %i = alloca i32                                 ; <i32*> [#uses=6]
  %s = alloca float                               ; <float*> [#uses=5]
  %0 = alloca float                               ; <float*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram15 to { }*))
  %1 = bitcast float** %a_addr to { }*            ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable16 to { }*))
  store float* %a, float** %a_addr
  %2 = bitcast i32* %n_addr to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable17 to { }*))
  store i32 %n, i32* %n_addr
  %3 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable18 to { }*))
  %4 = bitcast float* %s to { }*                  ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable20 to { }*))
  call void @llvm.dbg.stoppoint(i32 20, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store float 0.000000e+00, float* %s, align 4
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb1

9
  call void @llvm.dbg.stoppoint(i32 24, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %5 = load float** %a_addr, align 4              ; <float*> [#uses=1]
  %6 = load i32* %i, align 4                      ; <i32> [#uses=1]
  %7 = getelementptr float* %5, i32 %6            ; <float*> [#uses=1]
  %8 = load float* %7, align 1                    ; <float> [#uses=1]
  %9 = load float* %s, align 4                    ; <float> [#uses=1]
  %10 = fadd float %8, %9                         ; <float> [#uses=1]
  store float %10, float* %s, align 4
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %11 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %12 = add i32 %11, 1                            ; <i32> [#uses=1]
  store i32 %12, i32* %i, align 4
  br label %bb1

10
  call void @llvm.dbg.stoppoint(i32 22, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %14 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %15 = icmp slt i32 %13, %14                     ; <i1> [#uses=1]
  br i1 %15, label %bb, label %bb2

11
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %16 = load i32* %n_addr, align 4                ; <i32> [#uses=1]
  %17 = sitofp i32 %16 to float                   ; <float> [#uses=1]
  %18 = load float* %s, align 4                   ; <float> [#uses=1]
  %19 = fdiv float %18, %17                       ; <float> [#uses=1]
  store float %19, float* %0, align 4
  %20 = load float* %0, align 4                   ; <float> [#uses=1]
  store float %20, float* %retval, align 4
  br label %return

12
  %retval3 = load float* %retval                  ; <float> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 26, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram15 to { }*))
  ret float %retval3

13
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %ars = alloca float                             ; <float*> [#uses=4]
  %maxb = alloca float                            ; <float*> [#uses=4]
  %i = alloca i32                                 ; <i32*> [#uses=6]
  %n = alloca i32                                 ; <i32*> [#uses=7]
  %a = alloca [100 x float]                       ; <[100 x float]*> [#uses=4]
  %0 = alloca i32                                 ; <i32*> [#uses=3]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  call void @llvm.dbg.func.start({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram24 to { }*))
  %1 = bitcast float* %ars to { }*                ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %1, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable26 to { }*))
  %2 = bitcast float* %maxb to { }*               ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %2, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable28 to { }*))
  %3 = bitcast i32* %i to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %3, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable29 to { }*))
  %4 = bitcast i32* %n to { }*                    ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %4, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable30 to { }*))
  %5 = bitcast [100 x float]* %a to { }*          ; <{ }*> [#uses=1]
  call void @llvm.dbg.declare({ }* %5, { }* bitcast (%llvm.dbg.variable.type* @llvm.dbg.variable33 to { }*))
  call void @llvm.dbg.stoppoint(i32 33, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %6 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([23 x i8]* @.str34, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 34, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %7 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str35, i32 0, i32 0), i32* %n) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %8 = load i32* %n, align 4                      ; <i32> [#uses=1]
  %9 = icmp sle i32 %8, 0                         ; <i1> [#uses=1]
  br i1 %9, label %bb1, label %bb

14
  call void @llvm.dbg.stoppoint(i32 35, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %10 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %11 = icmp sgt i32 %10, 100                     ; <i1> [#uses=1]
  br i1 %11, label %bb1, label %bb2

15
  call void @llvm.dbg.stoppoint(i32 37, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %12 = call i32 @puts(i8* getelementptr ([3 x i8]* @.str36, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 38, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb8

16
  call void @llvm.dbg.stoppoint(i32 41, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %13 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([12 x i8]* @.str37, i32 0, i32 0)) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 42, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %i, align 4
  br label %bb4

17
  call void @llvm.dbg.stoppoint(i32 44, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %14 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %15 = getelementptr [100 x float]* %a, i32 0, i32 %14 ; <float*> [#uses=1]
  %16 = call i32 (i8*, ...)* @scanf(i8* noalias getelementptr ([3 x i8]* @.str38, i32 0, i32 0), float* %15) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 42, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %17 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %18 = add i32 %17, 1                            ; <i32> [#uses=1]
  store i32 %18, i32* %i, align 4
  br label %bb4

18
  call void @llvm.dbg.stoppoint(i32 42, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %19 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %20 = load i32* %i, align 4                     ; <i32> [#uses=1]
  %21 = icmp slt i32 %20, %19                     ; <i1> [#uses=1]
  br i1 %21, label %bb3, label %bb5

19
  call void @llvm.dbg.stoppoint(i32 46, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %22 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %a6 = bitcast [100 x float]* %a to float*       ; <float*> [#uses=1]
  %23 = call float @max_broj(float* %a6, i32 %22) nounwind ; <float> [#uses=1]

20
  %23 = call float @max_broj(float* %a6, i32 %22) nounwind ; <float> [#uses=1]
  store float %23, float* %maxb, align 4
  call void @llvm.dbg.stoppoint(i32 47, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %24 = load i32* %n, align 4                     ; <i32> [#uses=1]
  %a7 = bitcast [100 x float]* %a to float*       ; <float*> [#uses=1]
  %25 = call float @aritmeticka_sredina(float* %a7, i32 %24) nounwind ; <float> [#uses=1]

21
  %25 = call float @aritmeticka_sredina(float* %a7, i32 %24) nounwind ; <float> [#uses=1]
  store float %25, float* %ars, align 4
  call void @llvm.dbg.stoppoint(i32 48, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %26 = load float* %ars, align 4                 ; <float> [#uses=1]
  %27 = fmul float %26, 2.000000e+00              ; <float> [#uses=1]
  %28 = load float* %maxb, align 4                ; <float> [#uses=1]
  %29 = fcmp olt float %27, %28                   ; <i1> [#uses=1]
  %30 = zext i1 %29 to i32                        ; <i32> [#uses=1]
  %31 = load float* %ars, align 4                 ; <float> [#uses=1]
  %32 = fpext float %31 to double                 ; <double> [#uses=1]
  %33 = load float* %maxb, align 4                ; <float> [#uses=1]
  %34 = fpext float %33 to double                 ; <double> [#uses=1]
  %35 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr ([10 x i8]* @.str39, i32 0, i32 0), double %34, double %32, i32 %30) nounwind ; <i32> [#uses=0]
  call void @llvm.dbg.stoppoint(i32 49, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  store i32 0, i32* %0, align 4
  br label %bb8

22
  call void @llvm.dbg.stoppoint(i32 49, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  %36 = load i32* %0, align 4                     ; <i32> [#uses=1]
  store i32 %36, i32* %retval, align 4
  br label %return

23
  %retval9 = load i32* %retval                    ; <i32> [#uses=1]
  call void @llvm.dbg.stoppoint(i32 49, i32 0, { }* bitcast (%llvm.dbg.compile_unit.type* @llvm.dbg.compile_unit to { }*))
  call void @llvm.dbg.region.end({ }* bitcast (%llvm.dbg.subprogram.type* @llvm.dbg.subprogram24 to { }*))
  ret i32 %retval9
